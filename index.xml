<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Engineer | Tech Consultant | BI Developer in Boston</title>
    <link>http://andrewrgoss.com/</link>
    <description>Recent content on Data Engineer | Tech Consultant | BI Developer in Boston</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>andrewrgoss@gmail.com (Andrew Goss)</managingEditor>
    <webMaster>andrewrgoss@gmail.com (Andrew Goss)</webMaster>
    <lastBuildDate>Sat, 07 Jan 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://andrewrgoss.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Big Data University- Hadoop 101</title>
      <link>http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/</link>
      <pubDate>Sat, 07 Jan 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/post/hadoop.png&#34; alt=&#34;Hadoop&#34; title=&#34;Hadoop&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/&#34;&gt;Big Data University- Hadoop 101&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;Lesson Transcripts/Labs&lt;/b&gt;&lt;br&gt;
&lt;hr&gt;
&lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_1_What_is_Hadoop_Part1&#34;&gt;Unit_1 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; What_is_Hadoop_Part1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_1_What_is_Hadoop_Part2&#34;&gt;Unit_1 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; What_is_Hadoop_Part2&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_2_Hadoop_Architecture_Part1&#34;&gt;Unit_2 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; Hadoop_Architecture_Part1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_2_Hadoop_Architecture_Part2&#34;&gt;Unit_2 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; Hadoop_Architecture_Part2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_2_HDFS_Command_Line&#34;&gt;Unit_2 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; HDFS_Command_Line&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_2_Hadoop_Architecture_Lab&#34;&gt;Unit_2 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; Hadoop_Architecture_Lab&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_3_Hadoop_Administration&#34;&gt;Unit_3 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; Hadoop_Administration&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_4_MapReduce&#34;&gt;Unit_4 &amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; MapReduce&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Big Data University- Hadoop 101</title>
      <link>http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_1_What_is_Hadoop_Part1/</link>
      <pubDate>Sat, 07 Jan 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_1_What_is_Hadoop_Part1/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/post/hadoop.png&#34; alt=&#34;Hadoop&#34; title=&#34;Hadoop&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/&#34;&gt;Big Data University- Hadoop 101&lt;/a&gt; &amp;gt;&amp;gt; &lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs&#34;&gt;Lesson Transcripts/Labs&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;Unit_1_What_is_Hadoop_Part1&lt;/b&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;iframe width=&#34;660&#34; height=&#34;371&#34; src=&#34;https://www.youtube.com/embed/-65WgvIJ5xo&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Hello everyone and welcome to Hadoop Fundamentals What is Hadoop. My name is Asma Desai and I will be covering this topic.&lt;/p&gt;

&lt;p&gt;In this video we will explain what is Hadoop and what is Big Data. We will define some Hadoop-related open source projects and give some examples of Hadoop in action. Finally we will end off with some Big Data solutions and the Cloud.&lt;/p&gt;

&lt;p&gt;Imagine this scenario: You have 1GB of data that you need to process.&lt;/p&gt;

&lt;p&gt;The data is stored in a relational database in your desktop computer which has no problem handling the load. Then your company starts growing very quickly, and that data grows to 10GB, then 100GB, and you start to reach the limits of your current desktop computer.&lt;/p&gt;

&lt;p&gt;So what do you do? You scale up by investing in a larger computer, and you are then OK for a few more months. When your data grows from 1 TB to 10TB, and then 100TB, you are again quickly approaching the limits of that computer.&lt;/p&gt;

&lt;p&gt;Moreover, you are now asked to feed your application with unstructured data coming from sources like Facebook, Twitter, RFID readers, sensors, and so on. Your management wants to derive information from both the relational data and the unstructured data and wants this information as soon as possible. What should you do? Hadoop may be the answer.&lt;/p&gt;

&lt;p&gt;What is Hadoop? Hadoop is an open source project of the Apache Foundation. It is a framework written in Java originally developed by Doug Cutting who named it after his son&amp;rsquo;s toy elephant. Hadoop uses Google&amp;rsquo;s MapReduce technology as its foundation. It is optimized to handle massive quantities of data which could be structured, unstructured or semi-structured, using commodity hardware, that is, relatively inexpensive computers.&lt;/p&gt;

&lt;p&gt;This massive parallel processing is done with great performance. However, it is a batch operation handling massive amounts of data, so the response time is not immediate. Currently, in place updates are not possible in Hadoop, but appends to existing data is supported.&lt;/p&gt;

&lt;p&gt;Now, what&amp;rsquo;s the value of a system if the information it stores or retrieves is not consistent? Hadoop replicates its data across different computers, so that if one goes down, the data is processed on one of the replicated computers. Hadoop is not suitable for OnLine Transaction Processing workloads where data is randomly accessed on structured data like a relational database.&lt;/p&gt;

&lt;p&gt;Also, Hadoop is not suitable for OnLine Analytical Processing or Decision Support System workloads where data is sequentially accessed on structured data like a relational database, to generate reports that provide business intelligence. As of Hadoop version 2.6, updates are not possible, but appends are possible. Hadoop is used for Big Data. It complements OnLine Transaction Processing and OnLine Analytical Processing. It is NOT a replacement for a relational database system.&lt;/p&gt;

&lt;p&gt;So, what is Big Data? With all the devices available today to collect data, such as RFID readers, microphones, cameras, sensors, and so on, we are seeing an explosion in data being collected worldwide. Big Data is a term used to describe large collections of data (also known as datasets) that may be unstructured, and grow so large and quickly that it is difficult to manage with a regular database or statistical tools.&lt;/p&gt;

&lt;p&gt;In terms of numbers, what are we looking at? How BIG is &amp;ldquo;big data&amp;rdquo;? Well there are more than 3.2 billion internet users, and active cell phones have surpassed 7.6 billion. There are now more in-use cell phones than there are people on the planet (7.4 billion).&lt;/p&gt;

&lt;p&gt;Twitter processes 7TB of data ever day, and 600TB of data is processed by Facebook every day. Interestingly, about 80% of this data is unstructured. With this massive amount of data, businesses need fast, reliable, deeper data insight. Therefore, Big Data solutions based on Hadoop and other analytics software are becomingmore and more relevant.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Big Data University- Hadoop 101</title>
      <link>http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_1_What_is_Hadoop_Part2/</link>
      <pubDate>Sat, 07 Jan 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_1_What_is_Hadoop_Part2/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/post/hadoop.png&#34; alt=&#34;Hadoop&#34; title=&#34;Hadoop&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/&#34;&gt;Big Data University- Hadoop 101&lt;/a&gt; &amp;gt;&amp;gt; &lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs&#34;&gt;Lesson Transcripts/Labs&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;Unit_1_What_is_Hadoop_Part2&lt;/b&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;iframe width=&#34;660&#34; height=&#34;371&#34; src=&#34;https://www.youtube.com/embed/PS5QSGAoLNw&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;This is a list of some other open source project related to Hadoop:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Eclipse is a popular IDE donated by IBM to the open-source community&lt;/li&gt;
&lt;li&gt;Lucene is a text search engine library written in Java&lt;/li&gt;
&lt;li&gt;Hbase is a Hadoop database&lt;/li&gt;
&lt;li&gt;Hive provides data warehousing tools to extract, transform and load (ETL) data, and query this data stored in Hadoop files&lt;/li&gt;
&lt;li&gt;Pig is a high level language that generates MapReduce code to analyze large data sets.&lt;/li&gt;
&lt;li&gt;Spark is a cluster computing framework&lt;/li&gt;
&lt;li&gt;ZooKeeper is a centralized configuration service and naming registry for large distributed systems&lt;/li&gt;
&lt;li&gt;Ambari manages and monitors Hadoop clusters through an intuitive web UI&lt;/li&gt;
&lt;li&gt;Avro is a data serialization system&lt;/li&gt;
&lt;li&gt;UIMA is the architecture for the development, discovery, composition and deployment for the analysis of unstructured data&lt;/li&gt;
&lt;li&gt;Yarn is a large-scale operating system for big data applications&lt;/li&gt;
&lt;li&gt;Mapreduce is a software framework for easily writing applications which processes vast amounts of data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let&amp;rsquo;s now talk about examples of Hadoop in action.&lt;/p&gt;

&lt;p&gt;Early in 2011, Watson, a super computer developed by IBM competed in the popular Question and Answer show Jeopardy!. In that contest, Watson was successful in beating the two most winning Jeopardy players. Approximately 200 million pages of text were input using Hadoop to distribute the workload for loading this information into memory.&lt;/p&gt;

&lt;p&gt;Once this information was loaded, Watson used other technologies for advanced search and analysis. In the telecommunication industry we have China Mobile, a company that built a Hadoop cluster to perform data mining on Call Data Records. China Mobile was producing 5-8 TB of these records daily. By using a Hadoop-based system they were able to process 10 times as much data as when using their old system, and at one fifth the cost.&lt;/p&gt;

&lt;p&gt;In the media we have the New York Times which wanted to host on their website all public domain articles from 1851 to 1922. They converted articles from 11 million image files (4TB) to 1.5TB of PDF documents. This was implemented by one employee who ran a job in 24 hours on a 100-instance Amazon EC2 Hadoop cluster at a very low cost.&lt;/p&gt;

&lt;p&gt;In the technology field we again have IBM with IBM ES2, and enterprise search technology based on Hadoop, Nutch, Lucene and Jaql. ES2 is designed to address unique challenges of enterprise search such as: - The Use of enterprise-specific vocabulary, abbreviations and acronyms ES2 can perform mining tasks to build Acronym libraries, Regular expression patterns, and Geo-classification rules.&lt;/p&gt;

&lt;p&gt;There are also many internet or social network companies using Hadoop such as: Yahoo, Facebook, Amazon, eBay, Twitter, StumbleUpon, Rackspace, Ning, AOL, etc. Yahoo of course is the largest production user with an application running a Hadoop cluster consisting of about 10,000 Linux machines. Yahoo is also the largest contributor to the Hadoop open source project.&lt;/p&gt;

&lt;p&gt;Now, Hadoop is not a magic bullet that solves all kinds of problems. Hadoop is not good to process transactions due to its lack random access. It is not good when the work cannot be parallelized or when there are dependencies within the data, that is, record one must be processed before record two. It is not good for low latency data access. Not good for processing lots of small files although there is work being done in this area, for example, IBM&amp;rsquo;s Adaptive MapReduce. And it is not good for intensive calculations with little data.&lt;/p&gt;

&lt;p&gt;Now let&amp;rsquo;s move on, and talk about Big Data solutions. Big Data solutions are more than just Hadoop. They can integrate analytic solutions to the mix to derive valuable information that can combine structured legacy data with new unstructured data.&lt;/p&gt;

&lt;p&gt;Big data solutions may also be used to derive information from data in motion, for example, IBM has a product called InfoSphere Streams that can be used to quickly determine customer sentiment for a new product based on Facebook or Twitter comments.&lt;/p&gt;

&lt;p&gt;Finally we would like to end this presentation with one final thought: Cloud computing has gained a tremendous track in the past few years, and it is a perfect fit for Big Data solutions. Using the cloud, a Hadoop cluster can be setup in minutes, on demand, and it can run for as long as needed without having to pay for more than what is used.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Big Data University- Hadoop 101</title>
      <link>http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_2_HDFS_Command_Line/</link>
      <pubDate>Sat, 07 Jan 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_2_HDFS_Command_Line/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/post/hadoop.png&#34; alt=&#34;Hadoop&#34; title=&#34;Hadoop&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/&#34;&gt;Big Data University- Hadoop 101&lt;/a&gt; &amp;gt;&amp;gt; &lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs&#34;&gt;Lesson Transcripts/Labs&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;Unit_2_HDFS_Command_Line&lt;/b&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;iframe width=&#34;660&#34; height=&#34;371&#34; src=&#34;https://www.youtube.com/embed/Gd1sVPOYzuk&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Welcome to HDFS command line interface.
In this presentation, I will cover the general usage of the HDFS command line
interface and commands specific to HDFS. Other commands should be familiar to
anyone with UNIX experience and will not be covered.&lt;/p&gt;

&lt;p&gt;The HDFS can be manipulated through a Java API or through a command line
interface. All commands for manipulating HDFS through Hadoop&amp;rsquo;s command line
interface begin with &lt;code&gt;hdfs&lt;/code&gt;, a space, and &lt;code&gt;dfs&lt;/code&gt;. This is the file system shell. This
is followed by the command name as an argument
to &lt;code&gt;hdfs dfs&lt;/code&gt;. These commands start with a dash. For example, the &lt;code&gt;ls&lt;/code&gt; command
for listing a directory is a common UNIX command and is preceded with a dash.
As on UNIX systems, &lt;code&gt;ls&lt;/code&gt; can take a path as an argument. In this example, the
path is the current directory, represented by a single dot.&lt;/p&gt;

&lt;p&gt;As we saw for the &lt;code&gt;ls&lt;/code&gt; command, the file system shell commands can take paths as arguments.
These paths can be expressed in the form of &lt;b&gt;uniform resource identifiers&lt;/b&gt; or URIs. The
URI format consists of a scheme, an authority, and path. There are multiple schemes supported.
The local file system has a scheme of &amp;ldquo;file&amp;rdquo;. HDFS has
a scheme called &amp;ldquo;hdfs&amp;rdquo;. For example, let us say you wish to copy a file called &amp;ldquo;myfile.txt&amp;rdquo;
from your local filesystem to an HDFS file system on the localhost. You can do this by
issuing the command shown. The cp command takes a URI for the source and a URI for the
destination. The scheme and the authority do not always need to be specified. Instead
you may rely on their default values. These defaults can be overridden by specifying them
in a file named core-site.xml in the conf directory of your Hadoop installation.
HDFS is not a fully POSIX compliant file system,
but it supports many of the commands. The HDFS commands are mostly easily-recognized
UNIX commands like &lt;code&gt;cat&lt;/code&gt; and &lt;code&gt;chmod&lt;/code&gt;. There are also a few commands that are specific to HDFS
such as &lt;code&gt;copyFromLocal&lt;/code&gt;. We&amp;rsquo;ll examine a few of these.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;copyFromLocal&lt;/code&gt; and &lt;code&gt;put&lt;/code&gt; are two HDFS-specific commands that do the same thing -
copy files from the local filesystem to a location on another filesystem. Their opposite
is the &lt;code&gt;copyToLocal&lt;/code&gt; command which can also be referred to as get. This command copies
files out of the filesystem you specify and into the local filesystem.
&lt;code&gt;getMerge&lt;/code&gt; is an enhanced form of get that can merge the files from multiple locations
into a single local file. &lt;code&gt;setRep&lt;/code&gt; lets you override the default level
of replication. You can do this for one file or, with the &lt;code&gt;-R&lt;/code&gt; option, to an entire tree.&lt;/p&gt;

&lt;p&gt;This command returns immediately after requesting the new replication level. If you want the
command to block until the job is done, pass the &lt;code&gt;-w&lt;/code&gt; option.
IBM, with BigInsights, provides the Ambari Console as graphical way to work with HDFS.
The services tab provides a simple way to view the status of the Hadoop components.
Create a file view to browse and work with directories and files.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Big Data University- Hadoop 101</title>
      <link>http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_2_Hadoop_Architecture_Lab/</link>
      <pubDate>Sat, 07 Jan 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_2_Hadoop_Architecture_Lab/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/post/hadoop.png&#34; alt=&#34;Hadoop&#34; title=&#34;Hadoop&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/&#34;&gt;Big Data University- Hadoop 101&lt;/a&gt; &amp;gt;&amp;gt; &lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs&#34;&gt;Lesson Transcripts/Labs&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;Unit_2_Hadoop_Architecture_Lab&lt;/b&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;iframe width=&#34;660&#34; height=&#34;371&#34; src=&#34;https://www.youtube.com/embed/35ZKvSjAoSo&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&#34;http://andrewrgoss.com/img/2017/big-data-university--hadoop-101/Unit_2_Hadoop_Architecture_Lab.pdf&#34; class=&#34;btn&#34; target=&#34;_blank&#34;&gt;Lab exercises&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Big Data University- Hadoop 101</title>
      <link>http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_2_Hadoop_Architecture_Part1/</link>
      <pubDate>Sat, 07 Jan 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_2_Hadoop_Architecture_Part1/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/post/hadoop.png&#34; alt=&#34;Hadoop&#34; title=&#34;Hadoop&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/&#34;&gt;Big Data University- Hadoop 101&lt;/a&gt; &amp;gt;&amp;gt; &lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs&#34;&gt;Lesson Transcripts/Labs&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;Unit_2_Hadoop_Architecture_Part1&lt;/b&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;iframe width=&#34;660&#34; height=&#34;371&#34; src=&#34;https://www.youtube.com/embed/8AtrYcqO5ho&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Welcome to the unit of Hadoop Fundamentals on Hadoop architecture.
I will begin with a terminology review and then cover the major components
of Hadoop. We will see what types of nodes can exist in a Hadoop cluster and talk about
how Hadoop uses replication to lessen data loss. Finally I will explain an important
feature of Hadoop called &amp;ldquo;rack awareness&amp;rdquo; or &amp;ldquo;network topology awareness&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Before we examine Hadoop components and architecture, let&amp;rsquo;s review some of the
terms that are used in this discussion. A node is simply a computer. This is typically
non-enterprise, commodity hardware for nodes that contain data. So in this example,
we have Node 1. Then we can add more nodes, such as Node 2, Node 3, and so on.
This would be called a rack. A rack is a collection of 30 or 40 nodes that are
physically stored close together and are all connected to the same network switch.
Network bandwidth between any two nodes in the same rack is greater than bandwidth
between two nodes on different racks. You will see later how Hadoop takes advantage
of this fact. A Hadoop Cluster (or just cluster from
now on) is a collection of racks.&lt;/p&gt;

&lt;p&gt;Let us now examine the pre-Hadoop 2.2 architecture. Hadoop has two major components:
- the distributed filesystem component, the main example of which is the Hadoop
Distributed File System, though other file systems, such as IBM Spectrum Scale, are supported.
- the MapReduce component, which is a framework for performing calculations on
the data in the distributed file system. Pre-Hadoop 2.2 MapReduce is referred to as MapReduce
V1 and has its own built-in resource manager and schedule. This unit covers the Hadoop
Distributed File System and MapReduce is covered separately.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s now examine the Hadoop distributed file system - HDFS
HDFS runs on top of the existing file systems on each node in a Hadoop cluster. It is not
POSIX compliant. It is designed to tolerate high component failure rate through replication
of the data. Hadoop works best with very large files. The
larger the file, the less time Hadoop spends seeking for the next data location
on disk, the more time Hadoop runs at the limit of the bandwidth of your disks.
Seeks are generally expensive operations that are useful when they only need to analyze
a small subset of your dataset. Since Hadoop is designed to run over your entire
dataset, it is best to minimize seeks by using large files. Hadoop is designed for
streaming or sequential data access rather than random access. Sequential data access
means fewer seeks, since Hadoop only seeks to the beginning of each block and begins
reading sequentially from there. Hadoop uses blocks to store a file or parts
of a file. This is shown in the figure.&lt;/p&gt;

&lt;p&gt;Let us now examine file blocks in more detail. A Hadoop block is a file on the underlying
filesystem. Since the underlying filesystem stores files as blocks, one Hadoop block may
consist of many blocks in the underlying file system. Blocks are large. They default to
64 megabytes each and most systems run with block sizes of 128 megabytes or larger. Blocks
have several advantages: Firstly, they are fixed in size. This makes
it easy to calculate how many can fit on a disk.&lt;/p&gt;

&lt;p&gt;Secondly, by being made up of blocks that can be spread over multiple nodes, a file
can be larger than any single disk in the cluster. HDFS blocks also don&amp;rsquo;t waste space.
If a file is not an even multiple of the block size, the block containing the remainder does
not occupy the space of an entire block. As shown in the figure, a 450 megabyte file with
a 128 megabyte block size consumes four blocks, but the fourth block does not consume a full
128 megabytes. Finally, blocks fit well with replication,
which allows HDFS to be fault tolerant and available on commodity hardware.
As shown in the figure: Each block is replicated to multiple nodes. For example, block 1 is
stored on node 1 and node 2. Block 2 is stored on node 1 and node 3. And block 3 is stored
on node 2 and node 3. This allows for node failure without data loss. If node 1 crashes,
node 2 still runs and has block 1&amp;rsquo;s data. In this example, we are only replicating data
across two nodes, but you can set replication to be across many more nodes by changing Hadoop&amp;rsquo;s
configuration or even setting the replication factor for each individual file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/2017/big-data-university--hadoop-101/hdfs_replication.png&#34; alt=&#34;HDFS Replication&#34; title=&#34;HDFS Replication&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The second major component of Hadoop, described in detail in another lecture, is the MapReduce
component. HDFS was based on a paper Google published about their Google File System,
Hadoop&amp;rsquo;s MapReduce is inspired by a paper Google published on the MapReduce technology.
It is designed to process huge datasets for certain kinds of distributable problems using
a large number of nodes. A MapReduce program consists of two types of transformations that
can be applied to data any number of times - a map transformation and a reduce transformation.
A MapReduce job is an executing MapReduce program that is divided into map tasks that
run in parallel with each other and reduce tasks that run in parallel with each other.
Let us examine the main types of nodes in pre-Hadoop 2.2. They are classified as HDFS
or MapReduce V1 nodes. For HDFS nodes we have the NameNode, and the DataNodes. For MapReduce
V1 nodes we have the JobTracker and the TaskTracker nodes. Each of these is discussed in more
detail later in this presentation. There are other HDFS nodes such as the Secondary NameNode,
Checkpoint node, and Backup node that are not discussed in this course. This diagram
shows some of the communication paths between the different types of nodes on the system.
A client is shown as communicating with a JobTracker. It can also communicate with the
NameNode and with any DataNode.&lt;/p&gt;

&lt;p&gt;There is only one NameNode in the cluster. While the data that makes up a file is stored
in blocks at the data nodes, the metadata for a file is stored at the NameNode. The
NameNode is also responsible for the filesystem namespace. To compensate for the fact that
there is only one NameNode, one should configure the NameNode to write a copy of its state
information to multiple locations, such as a local disk and an NFS mount. If there is
one node in the cluster to spend money on the best enterprise hardware for maximum reliability,
it is the NameNode. The NameNode should also have as much RAM as possible because it keeps
the entire filesystem metadata in memory.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/2017/big-data-university--hadoop-101/types_of_nodes.png&#34; alt=&#34;Types of Nodes&#34; title=&#34;Types of Nodes&#34; /&gt;&lt;/p&gt;

&lt;p&gt;A typical HDFS cluster has many DataNodes. DataNodes store the blocks of data and blocks
from different files can be stored on the same DataNode. When a client requests a file,
the client finds out from the NameNode which DataNodes stored the blocks that make up that
file and the client directly reads the blocks from the individual DataNodes. Each DataNode
also reports to the NameNode periodically with the list of blocks it stores. DataNodes
do not require expensive enterprise hardware or replication at the hardware layer. The
DataNodes are designed to run on commodity hardware and replication is provided at the
software layer.&lt;/p&gt;

&lt;p&gt;A JobTracker node manages MapReduce V1 jobs. There is only one of these on the cluster.
It receives jobs submitted by clients. It schedules the Map tasks and Reduce tasks on
the appropriate TaskTrackers, that is where the data resides, in a rack-aware manner and
it monitors for any failing tasks that need to be rescheduled on a different
TaskTracker. To achieve the parallelism for your map and reduce tasks, there are many
TaskTrackers in a Hadoop cluster. Each TaskTracker spawns Java Virtual Machines to run your map
or reduce task. It communicates with the JobTracker and reads blocks from DataNodes.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Big Data University- Hadoop 101</title>
      <link>http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_2_Hadoop_Architecture_Part2/</link>
      <pubDate>Sat, 07 Jan 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_2_Hadoop_Architecture_Part2/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/post/hadoop.png&#34; alt=&#34;Hadoop&#34; title=&#34;Hadoop&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/&#34;&gt;Big Data University- Hadoop 101&lt;/a&gt; &amp;gt;&amp;gt; &lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs&#34;&gt;Lesson Transcripts/Labs&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;Unit_2_Hadoop_Architecture_Part2&lt;/b&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;iframe width=&#34;660&#34; height=&#34;371&#34; src=&#34;https://www.youtube.com/embed/iJmJhxIsmb8&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Hadoop 2.2 brought about architectural changes to MapReduce. As Hadoop has matured, people
have found that it can be used for more than running MapReduce jobs. But to keep each new
framework from having its own resource manager and scheduler, that would compete with the
other framework resource managers and schedulers, it was decided to have the recourse manager
and schedulers to be external to any framework. This new architecture is called YARN. (Yet
Another Resource Negotiator) . You still have DataNodes but there are no longer TaskTrackers
and the JobTracker. You are not required to run YARN with Hadoop 2.2. as MapReduce V1 is
still supported.&lt;/p&gt;

&lt;p&gt;There are two main ideas with YARN. Provide generic scheduling and resource management. This way Hadoop can support more than just
MapReduce. The other is to try to provide a more efficient scheduling and workload management.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/2017/big-data-university--hadoop-101/yarn.png&#34; alt=&#34;YARN&#34; title=&#34;YARN&#34; /&gt;&lt;/p&gt;

&lt;p&gt;With MapReduce V1, the administrator had to define how many
map slots and how many reduce slots there were on each node. Since the hardware capabilities
for each node in a Hadoop cluster can vary, for performance reasons, you might want to
limit the number of tasks on certain nodes. With YARN, this is no longer required.
With YARN, the resource manager is aware of the capabilities of each node via communication
with the NodeManager running on each node. When an application gets invoked , an Application
Master gets started. The Application Master is then responsible for negotiating resources
from the ResourceManager. These resources are assigned to Containers on each slave-node
and you can think that tasks then run in Containers. With this architecture, you are no longer
forced into a one size fits all. The NameNode is a single point of failure.&lt;/p&gt;

&lt;p&gt;Is there anything that can be done about that? Hadoop now supports high availability. In
this setup, there are now two NameNodes, one active and one standby.&lt;/p&gt;

&lt;p&gt;Also, now there are JournalNodes. There must be at least three and there must be an odd
number. Only one of the NameNodes can be active at a time. It is the JournalNodes, working
together , that decide which of the NameNodes is to be the active one and if the active
NameNode has been lost and whether the backup NameNode should take over.&lt;/p&gt;

&lt;p&gt;The NameNode loads the metadata for the file system into memory. This is the reason that
we said that NameNodes needed large amounts of RAM. But you are going to be limited at
some point when you use this vertical growth model. Hadoop Federation allows you to grow
your system horizontally. This setup also utilizes multiple NameNodes. But they act
independently. However, they do all share all of the DataNodes. Each NameNode has its
own namespace and therefore has control over its own set of files. For example, one file
that has blocks on DataNode 1 and DataNode 2 might be owned by NameNode 1. NameNode 2
might own a file that has blocks on DataNode 2 and DataNode 3. And NameNode 3 might have
a file with blocks on all three DataNodes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/2017/big-data-university--hadoop-101/hadoop_federation.png&#34; alt=&#34;Hadoop Federation&#34; title=&#34;Hadoop Federation&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Hadoop has awareness of the topology of the network. This allows it to optimize where
it sends the computations to be applied to the data. Placing the work as close as possible
to the data it operates on maximizes the bandwidth available for reading the data. In the diagram,
the data we wish to apply processing to is block B1, the dark blue rectangle on node
n1 on rack 1. When deciding which TaskTracker should receive a MapTask that reads data from
B1, the best option is to choose the TaskTracker that runs on the same node as the data. If
we can&amp;rsquo;t place the computation on the same node, our next best option is to place it
on a node in the same rack as the data. The worst case that Hadoop currently supports
is when the computation must be processed from a node in a different rack than the data.
When rack-awareness is configured for your cluster, Hadoop will always try to run the
task on the TaskTracker node with the highest bandwidth access to the data.&lt;/p&gt;

&lt;p&gt;Let us walk through an example of how a file gets written to HDFS. First, the client submits
a &amp;ldquo;create&amp;rdquo; request to the NameNode. The NameNode checks that the file does not already exist
and the client has permission to write the file. If that succeeds, the NameNode determines
the DataNode to where the first block is to be written. If the client is running on a
DataNode, it will try to place it there. Otherwise, it chooses DataNode at random. By default,
data is replicated to two other places in the cluster. A pipeline is built between the
three DataNodes that make up the pipeline. The second DataNode is a randomly chosen node
on a rack other than that of the first replica of the block. This is to increase redundancy.
The final replica is placed on a random node within the same rack as the second replica.
The data is piped from the second DataNode to the third. To ensure the write was successful
before continuing, acknowledgment packets are sent from the third DataNode to the second,
From the second DataNode to the first And from the first DataNode to the client This
process occurs for each of the blocks that makes up the file Notice that, for every block,
by default, there is a replica on at least two racks. When the client is done writing
to the DataNode pipeline and has received acknowledgements, it tells the NameNode that
the write has completed. The NameNode then checks that the blocks are at least minimally
replicated before responding.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Big Data University- Hadoop 101</title>
      <link>http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_3_Hadoop_Administration/</link>
      <pubDate>Sat, 07 Jan 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_3_Hadoop_Administration/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/post/hadoop.png&#34; alt=&#34;Hadoop&#34; title=&#34;Hadoop&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/&#34;&gt;Big Data University- Hadoop 101&lt;/a&gt; &amp;gt;&amp;gt; &lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs&#34;&gt;Lesson Transcripts/Labs&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;Unit_3_Hadoop_Administration&lt;/b&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;iframe width=&#34;660&#34; height=&#34;371&#34; src=&#34;https://www.youtube.com/embed/LtGliUam-_U&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Welcome to the unit on Hadoop Administration. The agenda covers adding nodes to a cluster,
verifying the health of a cluster, and stopping / starting components. Then the unit covers
configuring Hadoop and setting up rack topology.
Let&amp;rsquo;s begin with adding and removing nodes from a cluster.&lt;/p&gt;

&lt;p&gt;Adding nodes can be performed from the Ambari Console. To do so requires either the ip address
or hostname of the node to be added. The node to be added must also be reachable. And as
a matter of fact, it works both ways. The master and child nodes must all be able to
communicate with each other. In this case, a child node refers to the node that is being
added. It may not have BigInsights already installed on it. When the node is added to
a cluster, the BigInsights code is transferred to the new node and installed.
From the Ambari Console you navigate to the Hosts tab and, on the left side, under Actions
select Add New Hosts. You are then presented with a dialog that allows you to specify one
or more nodes to be added. You may type in ip address, hostnames or any combination thereof.
You can even specify an ipaddress range or a regular expression with your hostname.
Once the nodes have been added, you define which services are to be hosted on those nodes.
You can select multiple services for one or more nodes.
Services can also be removed from a node.&lt;/p&gt;

&lt;p&gt;As a matter of fact, if you are using the Ambari Console to remove a node, you must
first remove all services from that node. Depending on which services are running on
a node, you select which are to be removed. When there are no services running on a node,
it can be removed using the Ambari Console.
Next let us discuss verifying the heath of your cluster.
You are able to view all of the nodes in the cluster, see the status of each node and which
services are running on each node.
From the command line you can run the DFS Disk Check report. This lets you see how
much space is still available on each DataNode.&lt;/p&gt;

&lt;p&gt;Next let us look at start and stopping components and services.
In order to save some resources, you may only want to start a subset of the Hadoop
components . Using Ambari, navigate to the Services tab and choose a service from the
left that you would like to stop or start. When the services main page appears on the
right side under Service Actions you can start or stop that service.
All services can be stopped or started from the main Dashboard
Now let us look at how to configure Hadoop.&lt;/p&gt;

&lt;p&gt;Hadoop is configured using a number of XML files. And each file controls a number of
parameters. There are three main configuration files with which you will work.
core-site.xml is used to configure the parameters that are common to both HDFS and
MapReduce. hdfs-site.xml contains parameters that
are for the HDFS daemons, like the NameNode and DataNodes.
mapred-site.xml controls the settings for MapReduce daemons, JobTracker and TaskTrackers.
We are not going to spend the time covering all of the configuration files. That would
just take too much time. However, you do have the option of pausing this video if you would
like to read the descriptions of the other configuration files.&lt;/p&gt;

&lt;p&gt;The hadoop-env.sh is a script that sets a number of environment variables. Normally,
with Hadoop, these variables are not set but with BigInsights, they are. There is one that
must always be set and that is the &lt;code&gt;JAVA_HOME&lt;/code&gt; environment variable.
Here are some of the settings found in core-site.xml. We are not going to spend time on these nor
those on this page as well. If you want to pause the video to read their description,
feel free to do so.&lt;/p&gt;

&lt;p&gt;Next we have some setting in hdfs-site.xml. If you want to set a different value for the
default block size, then you would modify dfs.block.size. Likewise, if you want to change
the default replication factor, then you would modify dfs.replication. Once again, I am not
going to cover all the parameters.&lt;/p&gt;

&lt;p&gt;To change MapReduce settings, you modify mapred-site.xml. You can control which nodes can connect to
the JobTracker. Mapreduce.job.reduces lets you set the number
of reduce tasks per job. mapreduce.map.speculative. execution allows the JobTracker, when having
determined that there might be a problem with one map task, to start another map task running
in parallel. Both map tasks process the same data and, upon successful completion of one
of the tasks, the other is terminated. mapreduce.tasktracker.map.tasks.maximum and mapreduce.tasktracker.reduce.tasks.maximum
lets you define the number of slots on a TaskTracker that can run map and reduce task.
mapreduce.jobtracker.taskScheduler points to the scheduler that is to be used for MapReduce
jobs.&lt;/p&gt;

&lt;p&gt;So how do you set these parameters? First of all, you must stop the appropriate service
or services before making the change. You are making changes to value element for the
appropriate property element. The configuration files are in the hadoop-client/conf directory.
The changes must be made to the configuration files on all nodes in the cluster.
Let me spend a few minutes and focus on BigInsights. With BigInsights the hadoop-conf directory
is under &lt;code&gt;$BIGINSIGHTS_HOME&lt;/code&gt;. But, and this is very important, you do not make changes
to the configuration files in that directory. BigInsights has a staging directory which
is &lt;code&gt;$BIGINSIGHTS_HOME/hdm/hadoop-conf-staging&lt;/code&gt; that has copies of the configuration files.
You make changes to the files in this staging directory and then execute a script that distributes
the changes to all nodes in the cluster.&lt;/p&gt;

&lt;p&gt;Finally, let us talk about setting up rack topology.
To make Hadoop aware of the clusters topology, you code a script that receives as arguments,
one or more ip addresses of nodes in the cluster. The script returns on stdout, a list of rack
names, one for each input value. Then you update core-site.xml and modify the topology.script.file.name
property to point to your script.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Big Data University- Hadoop 101</title>
      <link>http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_4_MapReduce/</link>
      <pubDate>Sat, 07 Jan 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs/Unit_4_MapReduce/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/post/hadoop.png&#34; alt=&#34;Hadoop&#34; title=&#34;Hadoop&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/&#34;&gt;Big Data University- Hadoop 101&lt;/a&gt; &amp;gt;&amp;gt; &lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs&#34;&gt;Lesson Transcripts/Labs&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;Unit_4_MapReduce&lt;/b&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;iframe width=&#34;660&#34; height=&#34;371&#34; src=&#34;https://www.youtube.com/embed/sVrSx4zt8ho&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Welcome to Hadoop Fundamentals, Hadoop Components. In this unit I will discuss the MapReduce
Philosophy, describe the usage of Pig and Hive, talk about how to get data into Hadoop
through the use of Flume and Sqoop and finally describe how to schedule and control job execution
using Oozie.&lt;/p&gt;

&lt;p&gt;First I need to set the boundaries for this unit. The components presented in this unit
are done so at a very high level. The Hadoop environment is littered with a number of open
source components with funny sounding names. And to some people, it is difficult to understand
their usage. This unit is merely an attempt to provide you with descriptions of some of
these components. If you are interested in getting more detail about each of the components
covered in this unit, then I would direct you to the other Big Data University courses
that are specific to these components.&lt;/p&gt;

&lt;p&gt;Let us take a look at MapReduce. MapReduce is designed to process very large datasets for
certain types of distributable problems.
It attempts to spread the work across a large number of nodes and allows those nodes to
process the data in parallel. You cannot have dependencies within the data, meaning that
you cannot have a requirement that one record in a dataset must be processed before another.
Results from the initial parallel processing are sent to additional nodes where the data
is combined to allow for further reductions of the data.&lt;/p&gt;

&lt;p&gt;Now let&amp;rsquo;s take a look at how the map and reduce operations working sequence on your
data to produce the final output. In this case, we will have a job with a single map
step and a single reduce step. The first step is the map step. It takes a subset of the
full dataset called an input split and applies to each row in the input split an operation
that you have written, such as parsing each character string.
The output data is buffered in memory and spills to disk.
It is sorted and partitioned by key using the default partitioner.
A merge sort sorts each partition. There may be multiple map operations running
in parallel with each other, each one processing a different input split.
The partitions are shuffled among the reducers. For example, partition 1 goes to reducer 1.
The second map task also sends its partition 1 to reducer 1.
Partition 2 goes to another reducer.
Additional map tasks would act in the same way.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/2017/big-data-university--hadoop-101/mapreduce_distributed_mergesort_engine.png&#34; alt=&#34;MapReduce - Distributed Mergesort Engine&#34; title=&#34;MapReduce - Distributed Mergesort Engine&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Each reducer does its own merge steps and executes the code of your reduce task.
For example, it could do a sum on the number of occurrences of a particular character string.
This produces sorted output at each reducer. The data that flows into and out of the mappers
and reducers takes a specific form. Data enters Hadoop in unstructured form but before it
gets to the first mapper, Hadoop has changed it into key-value pairs
with Hadoop supplying its own key. The mapper produces a list of key value pairs.
Both the key and the value may change from the k1 and v1 that it came in as to a k2 and v2.
There can now be duplicate keys coming out of the mappers. The shuffle step will take
care of grouping them together. The output of the shuffle is the input to the reducer
step. Now, we still have a list of the v2&amp;rsquo;s that came out of the mapper step, but they
are grouped by their keys and there is no longer more than one record with the same
key. Finally, coming out of the reducer is, potentially, an entirely new key and value,
k3 and v3. For example, if your reducer summed the values associated with each k2, your k3
would be equal to k2 and your v3 would be the sum of the list of v2s.&lt;/p&gt;

&lt;p&gt;Let us look at an example of a simple data flow. Say we want to transform the input on
the left to the output on the right. On the left, we just have letters. On the right,
we have counts of the number of occurrences of each letter in the input.
Hadoop does the first step for us. It turns the input data into key-value pairs and supplies
its own key: a increasing sequence number. The function we write for the mapper needs
to take these key-value pairs and produce something that the reduce step can use to
count occurrences. The simplest solution is make each letter a key and make every value
a 1. The shuffle groups records having the same
key together, so we see B now has two values, both 1, associated with it.
The reduce is simple: it just sums the values it is given to produce a sum for each key.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/2017/big-data-university--hadoop-101/mapreduce_simple_dataflow_example.png&#34; alt=&#34;MapReduce - Simple Data Flow Example&#34; title=&#34;MapReduce - Simple Data Flow Example&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Big Data University- Hadoop 101</title>
      <link>http://andrewrgoss.com/2017/big-data-university--hadoop-101/</link>
      <pubDate>Sat, 07 Jan 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/2017/big-data-university--hadoop-101/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/post/hadoop.png&#34; alt=&#34;Hadoop&#34; title=&#34;Hadoop&#34; /&gt;&lt;br&gt;
&lt;b&gt;Course Code&lt;/b&gt;: BD0111EN&lt;br&gt;
&lt;a href=&#34;https://bigdatauniversity.com/courses/introduction-to-hadoop&#34; target=&#34;_blank&#34;&gt;Course Link&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://my.imdemocloud.com&#34; target=&#34;_blank&#34;&gt;IBM Analytics Demo Cloud&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;http://andrewrgoss.com/2017/big-data-university--hadoop-101/lesson_transcripts_labs&#34;&gt;Lesson Transcripts/Labs&lt;/a&gt;
&lt;hr&gt;
My goal in taking this course was to expand upon my knowledge around Apache Hadoop, a free, open source, Java-based programming framework. Topics in this course include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hadoop&amp;rsquo;s architecture and core components, such as MapReduce and the Hadoop Distributed File System (HDFS).&lt;/li&gt;
&lt;li&gt;Adding/removing nodes from Hadoop clusters, how to check available disk space on each node, and how to modify configuration parameters.&lt;/li&gt;
&lt;li&gt;Other Apache projects that are part of the Hadoop ecosystem, including Pig, Hive, HBase, ZooKeeper, Oozie, Sqoop, Flume, among others.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The course provides an IBM cloud sandbox environment to practice administering a Hadoop cluster and performing tasks such as adding and removing nodes. Additionally, the course provides instructions for connecting to the cloud environment via a SFTP client or a SSH client, the latter through which you can practice using the HDFS command line:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/page/big_data_university_hadoop_101/hdfs_command_line.png&#34; alt=&#34;HDFS Command Line&#34; title=&#34;HDFS Command Line&#34; /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h5 id=&#34;course-progress:8867589f317da4ba51ec6005579cfef2&#34;&gt;Course Progress&lt;/h5&gt;

&lt;progress max=&#34;1.0&#34; value=&#34;0.75&#34;&gt;&lt;/progress&gt;

&lt;p&gt;&lt;a href=&#34;https://bigdatauniversity.com/courses/introduction-to-hadoop&#34; class=&#34;btn&#34; target=&#34;_blank&#34;&gt;View course&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Data Science Industry: Who Does What</title>
      <link>http://andrewrgoss.com/2016/the-data-science-industry-who-does-what/</link>
      <pubDate>Wed, 09 Nov 2016 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/2016/the-data-science-industry-who-does-what/</guid>
      <description>&lt;p&gt;Great infographic from &lt;a href=&#34;https://www.datacamp.com&#34; target=&#34;_blank&#34;&gt;DataCamp&lt;/a&gt; that lays out the roles and skills associated with a data science team. I&amp;rsquo;m best cast as the data engineer right now.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://101.datascience.community/wp-content/uploads/2015/11/datasciencejobs.png&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;*Source: &lt;a href=&#34;https://www.datacamp.com&#34; target=&#34;_blank&#34;&gt;DataCamp&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Udemy- Python for Data Structures &amp; Algorithms</title>
      <link>http://andrewrgoss.com/2016/udemy--python-for-data-structures--algorithms/</link>
      <pubDate>Wed, 19 Oct 2016 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/2016/udemy--python-for-data-structures--algorithms/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/post/python.png&#34; alt=&#34;Python&#34; title=&#34;Python&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;https://www.udemy.com/python-for-data-structures-algorithms-and-interviews/learn/v4&#34; target=&#34;_blank&#34;&gt;COURSE LINK&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;http://nbviewer.jupyter.org/github/jmportilla/Python-for-Algorithms--Data-Structures--and-Interviews/tree/master&#34; target=&#34;_blank&#34;&gt;Jupyter Notebooks&lt;/a&gt;&lt;br&gt;
&lt;hr&gt;
Working on furthering my Python skills in the following areas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Algorithm Analysis and Big-O Notation&lt;/li&gt;
&lt;li&gt;Array Sequences&lt;/li&gt;
&lt;li&gt;Stacks Queues and Deques&lt;/li&gt;
&lt;li&gt;Linked Lists&lt;/li&gt;
&lt;li&gt;Recursion&lt;/li&gt;
&lt;li&gt;Trees&lt;/li&gt;
&lt;li&gt;Searching and Sorting Algorithms&lt;/li&gt;
&lt;li&gt;Graph Algorithms&lt;/li&gt;
&lt;li&gt;Jupyter Notebooks&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additionally, this course focuses on some of the &amp;lsquo;soft skills&amp;rsquo; needed to advance a career in technology such as personal branding, building a strong professional network, and practicing technical questions that could be asked on a future interview.&lt;/p&gt;

&lt;hr&gt;

&lt;h5 id=&#34;course-progress:ba96cbb6aafc41eabb6ce89e58c06fa0&#34;&gt;Course Progress&lt;/h5&gt;

&lt;progress max=&#34;1.0&#34; value=&#34;0.21&#34;&gt;&lt;/progress&gt;

&lt;p&gt;21% - &lt;font color=&#34;green&#34;&gt;IN PROGRESS&lt;/font&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/andrewrgoss/udemy-python-data_structs-algorithms&#34; class=&#34;btn&#34; target=&#34;_blank&#34;&gt;View my code on GitHub&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Stages of the Analytics Life Cycle</title>
      <link>http://andrewrgoss.com/2016/stages-of-the-analytics-life-cycle/</link>
      <pubDate>Sun, 09 Oct 2016 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/2016/stages-of-the-analytics-life-cycle/</guid>
      <description>

&lt;p&gt;Across industries, the applied use of data to inform business decisions has become a foundational (arguably critical) element of business. The end goal is to ultimately derive actionable insights from vast amounts of data being collected but it takes a series of activities/tasks to arrive at this juncture. Here is a description of each stage of the analytics life cycle:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Data Acquisition&lt;/b&gt; – This may involve scraping data, interfacing with APIs, querying relational and non-relational databases, or defining strategy in relation to what data to pursue.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Data Cleaning/Transformation&lt;/b&gt; – This may involve parsing and aggregating messy, incomplete, and unstructured data sources to produce datasets that can be used in analytics and/or predictive modeling.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Analytics&lt;/b&gt; – This involves statistical and machine learning-based modeling in order to understand, describe, or predict patterns in the data.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Prescribing Actions&lt;/b&gt; – This involves interpreting analytical results through the lens of business priorities, and using data-driven insights to inform strategy.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Programming/Automation&lt;/b&gt; – In many cases, data scientists are responsible for creating libraries and utilities to operationalize or simplify various stages of this process. Often, they will contribute production-level code for a firm’s data products.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;sub&gt;*Source: Burtch Works&lt;/sub&gt;&lt;/p&gt;

&lt;h2 id=&#34;big-data-analytics-lifecycle:fabfcdc15793a32766e038f5387cbc68&#34;&gt;Big Data Analytics Lifecycle&lt;/h2&gt;

&lt;p&gt;Big Data analysis differs from traditional data analysis primarily due to the volume, velocity, and variety of characteristics for the data being processed. This is a helpful overview I found on the high-level steps involved with acquiring, processing, analyzing, and repurposing data with the end goal of performing Big Data analysis.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.informit.com/content/images/chap3_9780134291079/elementLinks/03fig06.jpg&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;*Source: &lt;a href=&#34;http://www.informit.com/articles/article.aspx?p=2473128&amp;seqNum=11&#34; target=&#34;_blank&#34;&gt;InformIT&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Report- The State of Data Engineering</title>
      <link>http://andrewrgoss.com/2016/report--the-state-of-data-engineering/</link>
      <pubDate>Wed, 28 Sep 2016 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/2016/report--the-state-of-data-engineering/</guid>
      <description>&lt;p&gt;I recently came across an excellent report by &lt;a href=&#34;https://www.stitchdata.com&#34; target=_&gt;Stitch&lt;/a&gt; on the state of data engineering.&lt;/p&gt;

&lt;p&gt;Today, there are 6,500 people on LinkedIn who call themselves data engineers. In San Francisco alone, there are 6,600 job listings for this same title. The number of data engineers has doubled in the past year, but engineering leaders still find themselves faced with a significant shortage of data engineering talent.&lt;/p&gt;

&lt;p&gt;The need for data talent is born from a fundamental shift: tech companies are now data companies. Uber, AirBnB, Spotify–these companies build data products, and as a result, are scrambling to hire (and hold onto) the people that build and maintain data systems. Josh Wills, Data Engineer at Slack, half-joked, half-pleaded at DataEngConf 2016, &amp;ldquo;Please don&amp;rsquo;t hire my data engineers, they are all here now.&amp;rdquo; Even Slack, one of the hottest tech companies in the valley, is worried about holding onto this valuable talent.&lt;/p&gt;

&lt;p&gt;This report takes an in-depth look at the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The number of data engineers in the market today&lt;/li&gt;
&lt;li&gt;Their backgrounds and core skills—information that is particularly valuable for leaders thinking about how to transition software engineers into data engineering roles.&lt;/li&gt;
&lt;li&gt;Employment information that can help make the case for investing in this often expensive skill set.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Answers to these questions are paired with input from engineering leaders at Stripe, MIT, Looker, and more; who share their strategies for finding and retaining talent, developing data engineering talent in-house, and prioritizing a data engineering team&amp;rsquo;s projects. This report presents a clear snapshot of the current state of data engineering.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.stitchdata.com/resources/reports/the-state-of-data-engineering&#34; class=&#34;btn&#34; target=&#34;_blank&#34;&gt;View the full report&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;*Source: &lt;a href=&#34;https://www.stitchdata.com&#34; target=_&gt;Stitch&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SSH Keys With PuTTY and Cygwin for Windows</title>
      <link>http://andrewrgoss.com/2016/ssh-keys-with-putty-and-cygwin-for-windows/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>http://andrewrgoss.com/2016/ssh-keys-with-putty-and-cygwin-for-windows/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://andrewrgoss.com/img/post/putty.jpg&#34; alt=&#34;PuTTY: a free SSH and Telnet client&#34; title=&#34;PuTTY: a free SSH and Telnet client&#34; /&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;In my work at &lt;a href=&#34;http://www.digitaslbi.com/us&#34; target=&#34;_blank&#34;&gt;DigitasLBi&lt;/a&gt;, I need to login to a number of client-specific Linux machines via a terminal emulator (there is no UI for these remote environments) from my local Windows laptop. For this my team uses &lt;a href=&#34;https://www.cygwin.com&#34; target=&#34;_blank&#34;&gt;Cygwin&lt;/a&gt;, a Linux-like environment for Windows making it possible to port software running on POSIX systems (such as Linux, BSD, and Unix systems) to Windows. It&amp;rsquo;s possible to login of course just using a standard username/password combination with &lt;a href=&#34;https://mosh.org&#34; target=&#34;_blank&#34;&gt;Mosh&lt;/a&gt; or &lt;a href=&#34;https://en.wikipedia.org/wiki/Secure_Shell&#34; target=&#34;_blank&#34;&gt;SSH&lt;/a&gt; at the command line. However, the more secure (and easier to manage) approach is to utilize SSH keys to login into a virtual private server.&lt;/p&gt;

&lt;p&gt;In this post, I&amp;rsquo;ll delve into how I&amp;rsquo;ve set up my computer to use public/private SSH key pairings for accessing different environments. I previously &lt;a href=&#34;http://andrewrgoss.com/2016/ssh-with-git-bash-and-tortoisegit-for-windows&#34;&gt;posted&lt;/a&gt; about using SSH keys with Git Bash and TortoiseGit for Windows. While it&amp;rsquo;s possible to use the same SSH key pairings that were used for that, I prefer the more secure approach of generating specific pairings for &lt;a href=&#34;https://github.com&#34; target=&#34;_blank&#34;&gt;Github&amp;nbsp;&lt;img src=&#34;http://andrewrgoss.com/img/github.png&#34;&gt;&lt;/a&gt;&amp;nbsp;,&amp;nbsp;&lt;a href=&#34;https://about.gitlab.com&#34; target=&#34;_blank&#34;&gt;Gitlab&amp;nbsp;&lt;img src=&#34;http://andrewrgoss.com/img/gitlab.png&#34;&gt;&lt;/a&gt;, and any client-specific instances.&lt;/p&gt;

&lt;h2 id=&#34;step-1:f77569a6b4afc10750083404d55c7c58&#34;&gt;Step 1&lt;/h2&gt;

&lt;p&gt;Download the following PuTTY files from this site: &lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html&#34;&gt;http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PuTTY (the SSH and Telnet client itself)&lt;/li&gt;
&lt;li&gt;Pageant (an SSH authentication agent for PuTTY, PSCP, PSFTP, and Plink)&lt;/li&gt;
&lt;li&gt;PuTTYgen (an RSA and DSA key generation utility)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;step-2:f77569a6b4afc10750083404d55c7c58&#34;&gt;Step 2&lt;/h2&gt;

&lt;p&gt;Using the downloaded PuTTYgen executable, &lt;a href=&#34;https://winscp.net/eng/docs/ui_puttygen#generating_a_new_key&#34; target=&#34;_blank&#34;&gt;generate a new key&lt;/a&gt;. Click the &amp;lsquo;Save public key&amp;rsquo; and &amp;lsquo;Save private key&amp;rsquo; buttons to save these to the same location as your other keys (if you have any). On Windows, the .ssh folder of your home directory will be something like this: &lt;code&gt;C:\Users\\*username*\\.ssh&lt;/code&gt;. You can create this directory if it doesn&amp;rsquo;t exist. When saving the private key you will be optionally asked to enter a password for another layer of security if desired - it is also possible to hit &amp;lsquo;OK&amp;rsquo; and not use a password in combination with the SSH private key. Keep PuTTYgen open for now as you will need to copy the public key value into the authorized_keys files on the appropriate private server.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://andrewrgoss.com/img/post/putty_gen.PNG&#34; alt=&#34;PuTTY Key Generator&#34; title=&#34;PuTTY Key Generator&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Make sure you save the public key with a .txt (or .pub) extension and the private key with a .ppk one:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.servermom.org/wp-content/uploads/2014/06/public-key-save.jpg&#34;&gt;
&lt;img src=&#34;http://www.servermom.org/wp-content/uploads/2014/06/private-key-saved.jpg&#34;&gt;&lt;/p&gt;

&lt;h2 id=&#34;step-3:f77569a6b4afc10750083404d55c7c58&#34;&gt;Step 3&lt;/h2&gt;

&lt;p&gt;Open up Cygwin and log into the machine that you wish to configure with SSH keys. You&amp;rsquo;ll need the standard username/password credentials for the instance for now. In your home directory, issue the following commands:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ mkdir -p .ssh
$ chmod 700 .ssh
$ nano .ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Copy the generated public key in PuttyGen and paste it in the Nano editor:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.servermom.org/wp-content/uploads/2014/06/copy-pub-key.jpg&#34;&gt;&lt;/p&gt;

&lt;p&gt;Save and exit Nano by hitting &lt;code&gt;ctrl+O&lt;/code&gt;, enter, then &lt;code&gt;ctrl+X&lt;/code&gt; on your keyboard. Then change its permission to 644 with this command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ chmod 644 .ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-4:f77569a6b4afc10750083404d55c7c58&#34;&gt;Step 4&lt;/h2&gt;

&lt;p&gt;Ensure that PuTTY&amp;rsquo;s Pageant (downloaded in Step 1) is running (you should see a little icon for it in the tray at the bottom of your screen):&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://niki.hammler.net/w/images/f/f6/Pageant.png&#34;&gt;&lt;/p&gt;

&lt;p&gt;Double-click this to see the current list of private keys loaded to Pageant. You can manually load them each time through this UI when your computer boots up, but the more efficient approach is to have them load on startup following &lt;a href=&#34;http://blog.shvetsov.com/2010/03/making-pageant-automatically-load-keys.html&#34; target=&#34;_blank&#34;&gt;these steps&lt;/a&gt;. Pageant can load one or more private keys when it starts up if you provide them on the Pageant command line. The simplest way to do this in Windows is to create a specially crafted shortcut inside the Startup folder (Start -&amp;gt; Programs -&amp;gt; Startup).&lt;/p&gt;

&lt;h2 id=&#34;step-5:f77569a6b4afc10750083404d55c7c58&#34;&gt;Step 5&lt;/h2&gt;

&lt;p&gt;The last step is to &lt;a href=&#34;https://github.com/cuviper/ssh-pageant&#34; target=&#34;_blank&#34;&gt;download this daemon&lt;/a&gt; that allows you to use your loaded SSH keys from PuTTY&amp;rsquo;s Pageant in Cygwin. By editing your &lt;code&gt;~/.bashrc&lt;/code&gt; (or &lt;code&gt;~/.bash_profile&lt;/code&gt; - check where Cygwin is installed on your computer for these files) to add the following, this program will run whenever you start Cygwin.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# ssh-pageant
eval $(/usr/bin/ssh-pageant -r -a &amp;quot;/tmp/.ssh-pageant-$USERNAME&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With Cygwin running now with the loaded private keys from Pageant, you will be able to make secure, automated SSH connections from this shell to remote environments or other services built on top of SSH, like SFTP file transfers or pushing to git repositories.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Senior Software / Data Engineer in Boston</title>
    <link>https://andrewrgoss.com/</link>
    <description>Recent content on Senior Software / Data Engineer in Boston</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>andrewrgoss@gmail.com (Andrew Goss)</managingEditor>
    <webMaster>andrewrgoss@gmail.com (Andrew Goss)</webMaster>
    <lastBuildDate>Wed, 15 Nov 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://andrewrgoss.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Udemy- Complete Java Masterclass</title>
      <link>https://andrewrgoss.com/2017/udemy--complete-java-masterclass/</link>
      <pubDate>Wed, 15 Nov 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/2017/udemy--complete-java-masterclass/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/post/java.png&#34; alt=&#34;Java&#34; title=&#34;Java&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;https://www.udemy.com/java-the-complete-java-developer-course&#34; target=&#34;_blank&#34;&gt;COURSE LINK&lt;/a&gt;&lt;br&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;h5 id=&#34;other-learning-resources:ca88433d15302b856faf2ea8b1334f4e&#34;&gt;Other Learning Resources&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/java/index.html&#34; target=&#34;_blank&#34;&gt;Oracle Java™ Tutorials &amp;ndash; Trail: Learning the Java Language&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&#34;cheat-sheets:ca88433d15302b856faf2ea8b1334f4e&#34;&gt;Cheat Sheets&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;http://cs.bilkent.edu.tr/~guvenir/courses/CS101/op_precedence.html&#34; target=&#34;_blank&#34;&gt;Java Operator Precedence Table&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&#34;course-progress:ca88433d15302b856faf2ea8b1334f4e&#34;&gt;Course Progress&lt;/h5&gt;

&lt;progress max=&#34;1.0&#34; value=&#34;0.07&#34;&gt;&lt;/progress&gt;

&lt;p&gt;7% - &lt;green&gt;IN PROGRESS&lt;/green&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/andrewrgoss/complete-java-masterclass&#34; class=&#34;btn&#34; target=&#34;_blank&#34;&gt;View my code on GitHub&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>25 Potential Pitfalls In Mastering Programming</title>
      <link>https://andrewrgoss.com/2017/25-potential-pitfalls-in-mastering-programming/</link>
      <pubDate>Sat, 11 Nov 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/2017/25-potential-pitfalls-in-mastering-programming/</guid>
      <description>

&lt;p&gt;&lt;sub&gt;&lt;i&gt;written by &lt;a href=&#34;http://programmingzen.com/author/antonio-cangiano&#34; target=&#34;_blank&#34;&gt;Antonio Cangiano&lt;/a&gt;&lt;/i&gt;&lt;/sub&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I wanted to share this post as it really resonated with me. I&amp;rsquo;ve encountered many of these at times during my coding journey and plan to reread this.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;m going to share with you what I see as &amp;ldquo;25&amp;rdquo; common pitfalls when learning to program (or working towards mastering programming). Many of these points affect both beginners and professionals alike — myself very much included.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Forgetting that &lt;b&gt;programming is all about people&lt;/b&gt;. Yes, the machine will execute your code, but programming is solving problems for people, translating their requirements into code that will be read, maintained, and modified by other people (or yourself down the line).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Not spending enough time programming&lt;/b&gt;. Depending on your job or schedule, you might spend a lot of time on tasks that are related to programming but aren&amp;rsquo;t actually programming itself.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Stopping at the surface&lt;/b&gt; of a given technology you&amp;rsquo;re learning. Feeling satisfied with having mastered the basics just enough to get stuff done, without ever exploring further or going behind the scenes all that much.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;The Magpie approach&lt;/b&gt; to learning programming. You start learning Rails, half-way through you realize that Phoenix is out there, oh and you need to learn JavaScript so you might as well go with Node.js&amp;hellip; but wait &lt;a href=&#34;https://medium.com/@tjholowaychuk/farewell-node-js-4ba9e7f3e52b&#34; target=&#34;_blank&#34;&gt;TJ switched to Go&lt;/a&gt;, and hold on&amp;hellip; what about Rust? Soon enough your browser history will have, &amp;ldquo;web development or data science career&amp;rdquo;, &amp;ldquo;is Clojure dead?&amp;rdquo;, &amp;ldquo;Clojure vs Elixir&amp;rdquo;, &amp;ldquo;is Crystal mature enough&amp;rdquo;, &amp;ldquo;any good frameworks for Golang&amp;rdquo;, &amp;ldquo;Phoenix vs Buffalo&amp;rdquo; and &amp;ldquo;Kotlin for web development&amp;rdquo; all in the same week. 😀&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Reading books and watching courses online but &lt;b&gt;not practicing the skills&lt;/b&gt; presented, therefore quickly forgetting about them.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Skipping fundamentals&lt;/b&gt;. So you end up learning about continuation-passing style (CPS) but still can&amp;rsquo;t do SQL joins without an object-relational mapper.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Not enough patience or discipline&lt;/b&gt; to progress through the learning process and steps required to master any technology.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;No clear map or schedule for continuing to learn&lt;/b&gt; through available resources, while you tackle more immediate challenges in your day-to-day programming.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Analysis paralysis&lt;/b&gt;, wasting way too much time choosing amongst various frameworks and libraries (like Angular, React, and Vue), rather than just picking one, using it, and switching to something else only if you actually need to do so. Basically being a maximizer instead of a satisficer.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Refusing the polyglot nature of modern-day programming. In most domains, it isn&amp;rsquo;t reasonable to expect one programming language to be the best fit for every problem. Likewise, &lt;b&gt;identifying too much as an X or Y programmer&lt;/b&gt;, rather than just a programmer who prefers X or Y.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Fear of experimenting with new technology&lt;/b&gt;. Rather than just reading about certain emerging technologies (e.g., blockchain or chatbots), actually firing up a VM to try them out yourself, even if it involves getting your hands dirty with a programming language or API you are not familiar with.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Expecting to know everything upfront&lt;/b&gt;. Being disappointed after finding pointers to the solution via Google, because you didn&amp;rsquo;t come up with an elegant solution entirely on your own and kicking yourself while thinking, &amp;ldquo;I should have thought of that myself&amp;rdquo;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Not creating many small katas&lt;/b&gt;, exercises, and projects while learning.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Fear of sharing code&lt;/b&gt; with others or getting code reviews, lest you be judged.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Not seeking one-on-one mentorship&lt;/b&gt; from more experienced developers.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Expecting to learn everything at once with &lt;b&gt;unrealistic timelines&lt;/b&gt; (e.g., master iOS development in a month).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;For the more entrepreneur-minded, &lt;b&gt;not exploring cool projects because they don&amp;rsquo;t have a clear path to revenue generation&lt;/b&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Not asking questions for &lt;b&gt;fear of coming across as stupid&lt;/b&gt; or as more of a newbie than you actually are.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Feeling like you are not a real programmer if you&amp;rsquo;re creating apps by gluing high-level libraries together, in a high-level language instead of doing &amp;ldquo;hardcore&amp;rdquo; algorithms in more complex languages. I dub this &lt;b&gt;low-level programming envy&lt;/b&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Allowing the desire to learn best practices to hinder your ability to grasp the fundamentals&lt;/b&gt; of a given language or technology. For example, feeling like you need to learn a whole book on design patterns or master TDD/BDD before you start creating projects.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Perfectionism. &lt;b&gt;Letting perfect be the enemy of good enough&lt;/b&gt;. Never shipping anything, getting stuck in the &amp;ldquo;final touches&amp;rdquo; phase. (But balance is important, so don&amp;rsquo;t ship horribly broken software for the sake of shipping.)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Related to the previous point, &lt;b&gt;ignoring the progression: make it work, make it faster, make it clean&lt;/b&gt;. Instead, expecting a polished solution from the get-go. It&amp;rsquo;s important to accept that the first iteration will be a rough draft to improve upon.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Impostor Syndrome&lt;/b&gt;. Feeling that you aren&amp;rsquo;t good enough. This is particularly bad if you don&amp;rsquo;t fit the current developer stereotype, as a lack of role models that you can relate with might mistakenly confirm your doubts. This is part of why women and minorities representation in tech is so key.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Writing code and learning about programming from books, but &lt;b&gt;never reading other people&amp;rsquo;s code&lt;/b&gt;. Open Source gives us an amazing resource that can drastically speed up our understanding of programming and best practices.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Not getting exposed to other paradigms or domains&lt;/b&gt;. If you&amp;rsquo;re a web developer, not learning about other types of development. If you know Object-Oriented programming, not learning about Functional programming.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Not teaching others what you learn&lt;/b&gt;. Nothing will solidify what you learn as well as trying to explain it to others. Even just studying with the intention of teaching will increase your ability to learn.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There you have it&amp;hellip; 25 pitfalls. Oh, don&amp;rsquo;t forget off-by-one errors, too. 😀&lt;/p&gt;

&lt;h3 id=&#34;conclusion:fb811f506d8cdd068bd4e69efa38e874&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;All this to say:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You&amp;rsquo;re good enough. You can definitely do it. Just watch out for these pitfalls, make a plan, commit to it, then take it one step at the time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When learning to program (or improving your current mastery of it), I recommend the code/read/teach method. Code one real project, and many small exercises/katas as you learn. Read books but also other people&amp;rsquo;s code. Finally, teach what you learn online and in person. You don&amp;rsquo;t need to be an expert to do so.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://i0.wp.com/programmingzen.com/wp-content/uploads/2017/11/learning-to-program.gif?zoom=1.25&amp;resize=692%2C267&#34;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://programmingzen.com/pitfalls-when-learning-to-program&#34; class=&#34;btn&#34; target=&#34;_blank&#34;&gt;View original article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;*Source: &lt;a href=&#34;http://programmingzen.com&#34; target=_&gt;Programming Zen&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Path to Learning Scala</title>
      <link>https://andrewrgoss.com/2017/my-path-to-learning-scala/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/2017/my-path-to-learning-scala/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/post/scala.png&#34; alt=&#34;Scala&#34; title=&#34;Scala&#34; /&gt;&lt;br&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;p&gt;I recently joined a new data engineering team at &lt;a href=&#34;http://www.digitaslbi.com/us&#34; target=&#34;_blank&#34;&gt;DigitasLBi&lt;/a&gt; and &lt;a href=&#34;http://scala-lang.org&#34; target=&#34;_blank&#34;&gt;Scala&lt;/a&gt; is the predominant language being used. Having never coded in this language, I sought to quickly learn it and wanted to share the numerous resources I came across and bookmarked.&lt;/p&gt;

&lt;p&gt;The first place I usually turn when learning something new is to complete an introductory online course with videos and exercises. The most popular course for Scala is &lt;a href=&#34;https://www.coursera.org/learn/progfun1&#34; target=&#34;_blank&#34;&gt;Functional Programming Principles in Scala&lt;/a&gt; on Coursera and it is taught by the inventor of the language (Martin Odersky), so I gave it a whirl. After trying it out for a few weeks, I don&amp;rsquo;t recommend it for learning the language. If you need Scala for work as I do, taking this course will be very inefficient. You will end up spending a lot of time and effort while gaining very little in practical terms. It&amp;rsquo;s extremely heavy on theory around functional programming and if you want to use the language for building useful things, it&amp;rsquo;s unlikely that understanding applicative functors will be crucial for finishing the project. Having said that, it&amp;rsquo;s worth investing some time in learning basic functional features like pattern matching and currying, because it will make you more productive right from the beginning. I mention the course here as a helpful reference, but I found a different online course - &lt;a href=&#34;https://www.lynda.com/Scala-tutorials/Scala-Essential-Training/574693-2.html&#34; target=&#34;_blank&#34;&gt;Scala Essential Training&lt;/a&gt; - to be more in line with what I needed to do - learn Scala quickly to apply it on the job.&lt;/p&gt;

&lt;h4 id=&#34;cheat-sheets:8d3e9b9fdaee39d2df99b4141ab40343&#34;&gt;Cheat Sheets&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;https://andrewrgoss.com/docs/scala_reference_guide.pdf&#34; target=&#34;_blank&#34;&gt;Scala Reference Guide&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://alvinalexander.com/scala/scala-cheat-sheet-reference-examples&#34; target=&#34;_blank&#34;&gt;Scala Cheat Sheet&lt;/a&gt;&lt;br&gt;&lt;/p&gt;

&lt;h4 id=&#34;how-to-learn-scala:8d3e9b9fdaee39d2df99b4141ab40343&#34;&gt;How to Learn Scala&lt;/h4&gt;

&lt;p&gt;This article has a great compiled list of Scala resources to kickstart your learning.&lt;br&gt;
&lt;a href=&#34;https://blog.codacy.com/how-to-learn-scala-cb53c5eb5ff6&#34; target=&#34;_blank&#34;&gt;blog.codacy.com/how-to-learn-scala&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;learning-resource-links:8d3e9b9fdaee39d2df99b4141ab40343&#34;&gt;Learning Resource Links&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;http://allaboutscala.com&#34; target=&#34;_blank&#34;&gt;AllAboutScala&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://www.scala-exercises.org&#34; target=&#34;_blank&#34;&gt;Scala Exercises&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://scalafiddle.io&#34; target=&#34;_blank&#34;&gt;ScalaFiddle&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;http://twitter.github.io/scala_school&#34; target=&#34;_blank&#34;&gt;Scala School&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;http://docs.scala-lang.org/tour/tour-of-scala.html&#34; target=&#34;_blank&#34;&gt;A Tour of Scala&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://blog.redelastic.com/transitioning-to-scala-d1818f25b2b7&#34; target=&#34;_blank&#34;&gt;Transitioning to Scala from Another Language&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&#34;style-checker:8d3e9b9fdaee39d2df99b4141ab40343&#34;&gt;Style Checker&lt;/h4&gt;

&lt;p&gt;Scalastyle examines your Scala code and indicates potential problems with it.&lt;br&gt;
&lt;a href=&#34;http://www.scalastyle.org&#34; target=&#34;_blank&#34;&gt;www.scalastyle.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/andrewrgoss/learning-scala&#34; class=&#34;btn&#34; target=&#34;_blank&#34;&gt;View my code on GitHub&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Budget App</title>
      <link>https://andrewrgoss.com/projects/budget_app/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/projects/budget_app/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://andrewrgoss.com/udemy-complete-javascript/budget-app&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://andrewrgoss.com/img/projects/budget_app.png&#34; alt=&#34;Budget App&#34;&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://andrewrgoss.com/2017/udemy--complete-javascript-course/&#34;&gt;Udemy- Complete JavaScript Course&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;My projects&lt;/b&gt;&lt;br&gt;
&lt;a href=&#34;https://andrewrgoss.com/docs/budget-app-planning-guide.pdf&#34; target=&#34;_blank&#34;&gt;Planning Guide&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://andrewrgoss.com/udemy-complete-javascript/budget-app&#34; target=&#34;_blank&#34;&gt;View project&lt;/a&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;p&gt;This project put all kinds of different JavaScript concepts from the &lt;a href=&#34;https://andrewrgoss.com/2017/udemy--complete-javascript-course/&#34;&gt;Complete JavaScript Course&lt;/a&gt; I completed into practice.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/modules_structuring.png&#34; alt=&#34;Structuring Code With Modules&#34; title=&#34;Structuring Code With Modules&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/budget_app_modules.png&#34; alt=&#34;Budget App Modules&#34; title=&#34;Budget App Modules&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/event_bubbling.png&#34; alt=&#34;Event Bubbling, Target Element, and Event Delegation&#34; title=&#34;Event Bubbling, Target Element, and Event Delegation&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/event_delegation.png&#34; alt=&#34;When to Use Event Delegation&#34; title=&#34;When to Use Event Delegation&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://andrewrgoss.com/udemy-complete-javascript/budget-app&#34; class=&#34;btn&#34; target=&#34;_blank&#34;&gt;View my project&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/andrewrgoss/udemy-complete-javascript/tree/gh-pages/budget-app&#34; class=&#34;btn&#34; target=&#34;_blank&#34;&gt;View my code on GitHub&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DOM Pig Game</title>
      <link>https://andrewrgoss.com/projects/dom_pig_game/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/projects/dom_pig_game/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://andrewrgoss.com/udemy-complete-javascript/dom-pig-game&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://andrewrgoss.com/img/projects/dom_pig_game.png&#34; alt=&#34;DOM Pig Game&#34;&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://andrewrgoss.com/2017/udemy--complete-javascript-course/&#34;&gt;Udemy- Complete JavaScript Course&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;My projects&lt;/b&gt;&lt;br&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;p&gt;Part of the &lt;a href=&#34;https://andrewrgoss.com/2017/udemy--complete-javascript-course/&#34;&gt;Complete JavaScript Course&lt;/a&gt; I completed, this project put JavaScript concepts from the section on DOM manipulation and events into practice.&lt;/p&gt;

&lt;h4 id=&#34;game-rules:229eedee5891aa94a277619cf36534ac&#34;&gt;GAME RULES:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;The game has 2 players, playing in rounds&lt;/li&gt;
&lt;li&gt;In each turn, a player rolls a dice as many times as he/she wishes. Each result get added to his ROUND score&lt;/li&gt;
&lt;li&gt;BUT, if the player rolls a 1, all his/her ROUND score gets lost. After that, it&amp;rsquo;s the next player&amp;rsquo;s turn&lt;/li&gt;
&lt;li&gt;The player can choose to &amp;lsquo;Hold&amp;rsquo;, which means that his/her ROUND score gets added to the GLOBAL score. After that, it&amp;rsquo;s the next player&amp;rsquo;s turn&lt;/li&gt;
&lt;li&gt;The first player to reach the user-set winning score wins the game&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;coding-challenges:229eedee5891aa94a277619cf36534ac&#34;&gt;CODING CHALLENGES&lt;/h4&gt;

&lt;p&gt;Change the game to follow these rules:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A player loses his ENTIRE score when he rolls two 6 in a row. After that, it&amp;rsquo;s the next player&amp;rsquo;s turn. (Hint: Always save the previous dice roll in a separate variable)&lt;/li&gt;
&lt;li&gt;Add an input field to the HTML where players can set the winning score, so that they can change the predefined score of 100. (Hint: you can read that value with the .value property in JavaScript. This is a good oportunity to use google to figure this out :)&lt;/li&gt;
&lt;li&gt;Add another dice to the game, so that there are two dices now. The player loses his current score when one of them is a 1. (Hint: you will need CSS to position the second dice, so take a look at the CSS code for the first one.)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;https://andrewrgoss.com/udemy-complete-javascript/dom-pig-game&#34; class=&#34;btn&#34; target=&#34;_blank&#34;&gt;View my project&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/andrewrgoss/udemy-complete-javascript/tree/gh-pages/dom-pig-game&#34; class=&#34;btn&#34; target=&#34;_blank&#34;&gt;View my code on GitHub&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Udemy- Complete JavaScript Course</title>
      <link>https://andrewrgoss.com/2017/udemy--complete-javascript-course/advanced_js_objects_functions/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/2017/udemy--complete-javascript-course/advanced_js_objects_functions/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/post/javascript.png&#34; alt=&#34;JavaScript&#34; title=&#34;JavaScript&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;https://andrewrgoss.com/2017/udemy--complete-javascript-course/&#34;&gt;Udemy- Complete JavaScript Course&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;Advanced JavaScript: Objections and Functions&lt;/b&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/js_objects.png&#34; alt=&#34;Objects in JavaScript&#34; title=&#34;Objects in JavaScript&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/oo_paradigm.png&#34; alt=&#34;The Object-Oriented Paradigm&#34; title=&#34;The Object-Oriented Paradigm&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/js_constructors_instances.png&#34; alt=&#34;Constructors and Instances in JavaScript&#34; title=&#34;Constructors and Instances in JavaScript&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/inheritance.png&#34; alt=&#34;Inheritance in General&#34; title=&#34;Inheritance in General&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/prototypes.png&#34; alt=&#34;Inheritance in JavaScript: Prototypes and Prototype Chains&#34; title=&#34;Inheritance in JavaScript: Prototypes and Prototype Chains&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;summary:0e899c4bc90c28bac84dfe5fb6761b11&#34;&gt;Summary&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Every JavaScript object has a &lt;b&gt;prototype property&lt;/b&gt;, which makes inheritance possible in JavaScript;&lt;/li&gt;
&lt;li&gt;The prototype property of an object is where we put methods and properties that we want &lt;b&gt;other objects to inherit&lt;/b&gt;;&lt;/li&gt;
&lt;li&gt;The Constructor&amp;rsquo;s prototype property is &lt;b&gt;NOT&lt;/b&gt; the prototype of the Constructor itself; it&amp;rsquo;s the prototype of &lt;b&gt;ALL&lt;/b&gt; instances that are created through it;&lt;/li&gt;
&lt;li&gt;When a certain method (or property) is called, the search starts in the object itself, and if it cannot be found, the search moves on to the object&amp;rsquo;s prototype. This continues until the method is found: &lt;b&gt;prototype chain.&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/function_objects.png&#34; alt=&#34;Functions Are Also Objects in JavaScript&#34; title=&#34;Functions Are Also Objects in JavaScript&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/closure.png&#34; alt=&#34;Closures Summary&#34; title=&#34;Closures Summary&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Udemy- Complete JavaScript Course</title>
      <link>https://andrewrgoss.com/2017/udemy--complete-javascript-course/how_js_works_behind/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/2017/udemy--complete-javascript-course/how_js_works_behind/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/post/javascript.png&#34; alt=&#34;JavaScript&#34; title=&#34;JavaScript&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;https://andrewrgoss.com/2017/udemy--complete-javascript-course/&#34;&gt;Udemy- Complete JavaScript Course&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;How JavaScript Works Behind the Scenes&lt;/b&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/js_code_what_happens.png&#34; alt=&#34;What Happens to JS Code?&#34; title=&#34;What Happens to JS Code?&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/execution_contexts.png&#34; alt=&#34;Execution Contexts&#34; title=&#34;Execution Contexts&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/execution_stack.png&#34; alt=&#34;Execution Stack&#34; title=&#34;Execution Stack&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/execution_context_detail.png&#34; alt=&#34;Execution Context in Detail&#34; title=&#34;Execution Context in Detail&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/variable_object.png&#34; alt=&#34;Variable Object&#34; title=&#34;Variable Object&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/js_scoping.png&#34; alt=&#34;Scoping in JavaScript&#34; title=&#34;Scoping in JavaScript&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/scope_chain.png&#34; alt=&#34;Scope Chain&#34; title=&#34;Scope Chain&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/scope_chain.png&#34; alt=&#34;Execution Stack vs. Scope Chain&#34; title=&#34;Execution Stack vs. Scope Chain&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/this_variable.png&#34; alt=&#34;&#39;This&#39; Variable&#34; title=&#34;&#39;This&#39; Variable&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Udemy- Complete JavaScript Course</title>
      <link>https://andrewrgoss.com/2017/udemy--complete-javascript-course/js_browser/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/2017/udemy--complete-javascript-course/js_browser/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/post/javascript.png&#34; alt=&#34;JavaScript&#34; title=&#34;JavaScript&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;https://andrewrgoss.com/2017/udemy--complete-javascript-course/&#34;&gt;Udemy- Complete JavaScript Course&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;JavaScript in the Browser: DOM Manipulation and Events&lt;/b&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/document_object_model.png&#34; alt=&#34;Document Object Model&#34; title=&#34;Document Object Model&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/dom_manipulation.png&#34; alt=&#34;DOM Manipulation&#34; title=&#34;DOM Manipulation&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/what_are_events.png&#34; alt=&#34;What Are Events?&#34; title=&#34;What Are Events?&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/how_events_processed.png&#34; alt=&#34;How Events Are Processed&#34; title=&#34;How Events Are Processed&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Udemy- Complete JavaScript Course</title>
      <link>https://andrewrgoss.com/2017/udemy--complete-javascript-course/js_language_basics/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/2017/udemy--complete-javascript-course/js_language_basics/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/post/javascript.png&#34; alt=&#34;JavaScript&#34; title=&#34;JavaScript&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;https://andrewrgoss.com/2017/udemy--complete-javascript-course/&#34;&gt;Udemy- Complete JavaScript Course&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;JavaScript language basics&lt;/b&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;h2 id=&#34;introduction-to-javascript:107ebea9dbe8e000d775582450c35225&#34;&gt;Introduction to JavaScript&lt;/h2&gt;

&lt;h3 id=&#34;what-is-javascript:107ebea9dbe8e000d775582450c35225&#34;&gt;What is JavaScript?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;JavaScript is a lightweight, cross-platform, object-oriented computer programming language.&lt;/li&gt;
&lt;li&gt;JavaScript is one of the three core technologies of web development.&lt;/li&gt;
&lt;li&gt;JavaScript is most commonly used as part of webpages.&lt;/li&gt;
&lt;li&gt;Today, JavaScript can be used in different places:

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Client-side: JavaScript was traditionally only used in the browser&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Server-side: Thanks to node.js, we can use JavaScript on the server as well&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;JavaScript is what made modern web development possible:

&lt;ul&gt;
&lt;li&gt;Dynamic effects and interactivity;&lt;/li&gt;
&lt;li&gt;Modern web applications that we can interact with.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;the-role-of-javascript:107ebea9dbe8e000d775582450c35225&#34;&gt;The Role of JavaScript&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/role_of_js.png&#34; alt=&#34;Role of JavaScript&#34; title=&#34;Role of JavaScript&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;variables-and-data-types:107ebea9dbe8e000d775582450c35225&#34;&gt;Variables and Data Types&lt;/h2&gt;

&lt;h3 id=&#34;primitive-javascript-data-types:107ebea9dbe8e000d775582450c35225&#34;&gt;Primitive JavaScript Data Types&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Number:&lt;/b&gt; Floating point numbers, for decimals and integers.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;String:&lt;/b&gt; Sequence of characters, used for text.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Boolean:&lt;/b&gt; Logical data type that can only be true or false.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Undefined:&lt;/b&gt; Data type of a variable which does not have a value yet.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Null:&lt;/b&gt; Also means &amp;lsquo;non-existent&amp;rsquo;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;operators:107ebea9dbe8e000d775582450c35225&#34;&gt;Operators&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Operator_Precedence&#34; target=&#34;_blank&#34;&gt;JavaScript Operator Precedence&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;boolean-logic-and-switch-statements:107ebea9dbe8e000d775582450c35225&#34;&gt;Boolean Logic and Switch Statements&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/basic_boolean_logic.png&#34; alt=&#34;Basic Boolean Logic&#34; title=&#34;Basic Boolean Logic&#34; /&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;For these sections, my code lives on Github:&amp;nbsp;&amp;nbsp;&amp;nbsp;
&lt;a href=&#34;https://github.com/andrewrgoss/udemy-complete-javascript/tree/master/2-js-basics&#34; class=&#34;btn&#34; target=&#34;_blank&#34;&gt;View GitHub Repo&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Introduction to JavaScript&lt;/li&gt;
&lt;li&gt;Getting Started with JavaScript&lt;/li&gt;
&lt;li&gt;Variables and Data Types&lt;/li&gt;
&lt;li&gt;Variable Mutation and Type Coercion&lt;/li&gt;
&lt;li&gt;Operators&lt;/li&gt;
&lt;li&gt;If / else Statements&lt;/li&gt;
&lt;li&gt;Boolean Logic and Switch Statements&lt;/li&gt;
&lt;li&gt;Coding Challenge 1&lt;/li&gt;
&lt;li&gt;Coding Challenge 1: Solution&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;Statements and Expressions&lt;/li&gt;
&lt;li&gt;Arrays&lt;/li&gt;
&lt;li&gt;Objects and Properties&lt;/li&gt;
&lt;li&gt;Objects and Methods&lt;/li&gt;
&lt;li&gt;Loops and Iteration&lt;/li&gt;
&lt;li&gt;Coding Challenge 2&lt;/li&gt;
&lt;li&gt;Coding Challenge 2: Solution&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;p&gt;Important Note: ES5, ES6 / ES2015 and ES2016&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/2017/udemy--complete-javascript-course/js_history.png&#34; alt=&#34;JavaScript History&#34; title=&#34;JavaScript History&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Udemy- Complete JavaScript Course</title>
      <link>https://andrewrgoss.com/2017/udemy--complete-javascript-course/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/2017/udemy--complete-javascript-course/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/post/javascript.png&#34; alt=&#34;JavaScript&#34; title=&#34;JavaScript&#34; /&gt;&lt;br&gt;
&lt;a href=&#34;https://www.udemy.com/certificate/UC-NWM229P1&#34; target=&#34;_blank&#34;&gt;COMPLETION CERTIFICATE&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;http://codingheroes.io/resources&#34; target=&#34;_blank&#34;&gt;Design and Coding Resources&lt;/a&gt;&lt;br&gt;
&lt;hr&gt;&lt;/p&gt;

&lt;p&gt;This course represented my official foray into learning JavaScript. Up to this point I&amp;rsquo;d only used it on occasion with no formal training, as my focus has been predominantly on back-end data engineering. I wanted to gain a closer perspective on full-stack development, and JavaScript is a core front-end technology for me to have as part of my stack. This course covers the following areas:&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://andrewrgoss.com/2017/udemy--complete-javascript-course/js_language_basics&#34;&gt;JavaScript language basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://andrewrgoss.com/2017/udemy--complete-javascript-course/how_js_works_behind&#34;&gt;How JavaScript works behind the scenes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://andrewrgoss.com/2017/udemy--complete-javascript-course/js_browser&#34;&gt;JavaScript in the browser: DOM manipulation and events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://andrewrgoss.com/2017/udemy--complete-javascript-course/advanced_js_objects_functions&#34;&gt;Advanced JavaScript: objections and functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://andrewrgoss.com/projects/budget_app&#34;&gt;Putting it all together: budget app project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h5 id=&#34;my-projects:f84187bd0236cff9ef749957d6953b7f&#34;&gt;My Projects&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;https://andrewrgoss.com/projects/dom_pig_game&#34;&gt;DOM Pig Game&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://andrewrgoss.com/projects/budget_app&#34;&gt;Budget App&lt;/a&gt;&lt;br&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h5 id=&#34;course-progress:f84187bd0236cff9ef749957d6953b7f&#34;&gt;Course Progress&lt;/h5&gt;

&lt;progress max=&#34;1.0&#34; value=&#34;1.0&#34;&gt;&lt;/progress&gt;

&lt;p&gt;100% - completed 9/29/17.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/andrewrgoss/udemy-complete-javascript&#34; class=&#34;btn&#34; target=&#34;_blank&#34;&gt;View my code on GitHub&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Complete Software Developer&#39;s Career Guide</title>
      <link>https://andrewrgoss.com/books/complete_software_dev_career_guide/</link>
      <pubDate>Fri, 15 Sep 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/books/complete_software_dev_career_guide/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.amazon.com/Complete-Software-Developers-Career-Guide-ebook/dp/B073X6GNJ1&#34; target=&#34;blank&#34;&gt;&lt;img src=&#34;https://andrewrgoss.com/img/books/complete_software_dev_career_guide.jpg&#34; alt=&#34;The Complete Software Developer&#39;s Career Guide&#34; title=&#34;The Complete Software Developer&#39;s Career Guide&#34; /&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://andrewrgoss.com/books/&#34;&gt;Books&lt;/a&gt; &amp;gt;&amp;gt; &lt;b&gt;The Complete Software Developer&amp;rsquo;s Career Guide&lt;/b&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&#34;https://simpleprogrammer.com/products/careerguide/links&#34; target=&#34;_blank&#34;&gt;Book resources and links&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://membership.simpleprogrammer.com/courses/toolkit&#34; target=&#34;_blank&#34;&gt;Digital toolkit&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;s the Go Language Really Good For?</title>
      <link>https://andrewrgoss.com/2017/whats-the-go-language-really-good-for/</link>
      <pubDate>Thu, 01 Jun 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/2017/whats-the-go-language-really-good-for/</guid>
      <description>&lt;p&gt;&lt;sub&gt;&lt;i&gt;written by &lt;a href=&#34;http://www.infoworld.com/author/Serdar-Yegulalp&#34; target=&#34;_blank&#34;&gt;Serdar Yegulalp&lt;/a&gt;&lt;/i&gt;&lt;/sub&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://www.infoworld.com&#34; target=&#34;_blank&#34;&gt;InfoWorld&lt;/a&gt; examines the strengths, weaknesses, use cases, and future directions of Google&amp;rsquo;s hit programming language&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;During its eight-plus years in the wild, &lt;a href=&#34;https://golang.org&#34; target=&#34;_blank&#34;&gt;Google’s Go language&lt;/a&gt;—with version 1.8.1 out as of April 2017—has evolved from being a curiosity for alpha geeks to being the battle-tested programming language behind some of the world’s most important cloud-centric projects.&lt;/p&gt;

&lt;p&gt;Why was Go chosen by the developers of such projects as Docker and Kubernetes? What are Go’s defining characteristics, how does it differ from other programming languages, and what kinds of projects is it most suitable for building? This excellent InfoWorld article explores Go’s feature set, the optimal use cases, the language’s omissions and limitations, and where Go may be going from here.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.infoworld.com/article/3198928/development-tools/whats-the-go-language-really-good-for.html&#34; class=&#34;btn&#34; target=&#34;_blank&#34;&gt;View article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;*Source: &lt;a href=&#34;http://www.infoworld.com&#34; target=_&gt;InfoWorld&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What is a Productive Data Engineering Team?</title>
      <link>https://andrewrgoss.com/2017/what-is-a-productive-data-engineering-team/</link>
      <pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/2017/what-is-a-productive-data-engineering-team/</guid>
      <description>

&lt;p&gt;&lt;sub&gt;&lt;i&gt;written by &lt;a href=&#34;https://www.oreilly.com/people/17084-jesse-anderson&#34; target=&#34;_blank&#34;&gt;Jesse Anderson&lt;/a&gt;&lt;/i&gt;&lt;/sub&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Merging the gaps between data science and engineering, and what each side can learn from the other.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In my experience working with data engineering teams, I find that most teams don’t realize they have to change their thinking about data and systems to be successful with big data. Data engineering teams need to think about how data is valuable and at what scale the data is coming in. When thinking about scale, I encourage teams to think in terms of 100 billion rows or events, processing 1PB of data, and jobs that take 10 hours to complete.&lt;/p&gt;

&lt;h2 id=&#34;imagine-processing-at-100-billion-rows:be8878b9aea0d8ff31bd44efb170191f&#34;&gt;Imagine processing at 100 billion rows&lt;/h2&gt;

&lt;p&gt;When you are processing data in real-time or batch, you need to imagine that you’re processing 100 billion rows. This affects how you think about reduces, or the equivalent of reduces, in your technology of choice. If you reduce inefficiently, or when you don’t have to, you’ll experience scaling issues.&lt;/p&gt;

&lt;h2 id=&#34;your-code-should-scale-to-1pb:be8878b9aea0d8ff31bd44efb170191f&#34;&gt;Your code should scale to 1PB&lt;/h2&gt;

&lt;p&gt;When you’re thinking about amounts of data, think in terms of 1 PB. Although you may have substantially less data stored, you’ll want to make sure your processing is planned in such a way that it can handle 1 PB. As you’re writing a program to process 100 GB, you’ll want to make sure that same code can scale to 1 PB. One common manifestation for this problem is to cache data in memory for an algorithm. While that may work at 100 GB, it probably will get an out-of-memory error at 1 PB.&lt;/p&gt;

&lt;h2 id=&#34;why-you-should-plan-for-10-hour-jobs:be8878b9aea0d8ff31bd44efb170191f&#34;&gt;Why you should plan for 10-hour jobs&lt;/h2&gt;

&lt;p&gt;When you are thinking about long-running processes, I encourage teams to think of processes requiring running for 10 hours to complete. To explain this reasoning, let’s talk about coding defensively. If you have an exception at 9.5 hours into a 10-hour job, for example, you now have two problems: to find and fix the error, and to rerun the 10-hour job.&lt;/p&gt;

&lt;p&gt;A job should be coded to check assumptions, whenever possible, and to avoid an exception from exiting a job. A common example of these issues is when a team is dealing with string-based formats, like JSON and XML, and then expecting a certain format; this could be casting a string to a number—if you don’t check that string beforehand with a regular expression, you could find yourself with an exception.&lt;/p&gt;

&lt;p&gt;Given the 10-hour job consideration, the team needs to decide what to do about data that doesn’t fit the expected input. Most frameworks won’t handle data errors by themselves—this is something the team has to solve in code. Some common options are to skip the data and move on, log the error and the data, or to die immediately. Each of these decisions is very use-case dependent. If losing data or not processing every single piece of data is the end of the world, you’ll end up having to fix any bad data, manually.&lt;/p&gt;

&lt;p&gt;Every engineering decision needs to be made through these lenses. I teach this to every team, even if their data isn’t at these levels. If a data engineering team is truly experiencing big data problems, they will hit these levels eventually.&lt;/p&gt;

&lt;h2 id=&#34;a-data-engineering-team-should-be-at-the-hub-of-the-wheel:be8878b9aea0d8ff31bd44efb170191f&#34;&gt;A data engineering team should be at the “hub of the wheel”&lt;/h2&gt;

&lt;p&gt;Sometimes I’m teaching at large enterprises and they disagree that there should be a separate data engineering team. In these situations, the enterprise is usually thinking entirely of the technical requirements. Setting a data engineering team at the hub of the wheel puts the team in a completely different light and reveals how the team can become an essential part of the business process.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://d3ansictanv2wj.cloudfront.net/image00-d628951691b15e9457f4cfe9200f20d4.jpg&#34; align=&#34;right&#34;&gt;&lt;/p&gt;

&lt;p&gt;This hub concept is often foreign or not thought of, and many organizations don’t realize their project will grow in scope. As the other parts of the organization begin to consume the data or use the data pipeline, it becomes clear the data engineering team will need help—usually to fill any skill gaps, often having to do with programming.&lt;/p&gt;

&lt;p&gt;Once a data pipeline is first released, it doesn’t stay at its initial usage; it almost always grows. There is pent-up demand for data products that the pipeline starts to facilitate. New data sets and data sources will get added. There will be new processing and consumption of data. In a complete technical free-for-all, you will end up with issues. Often, teams that lack qualified data engineers will completely misuse or misunderstand how the technologies should be used.&lt;/p&gt;

&lt;h2 id=&#34;how-to-work-with-a-data-science-team:be8878b9aea0d8ff31bd44efb170191f&#34;&gt;How to work with a data science team&lt;/h2&gt;

&lt;p&gt;Before diving into the relationship between data science and data engineering teams, I want to briefly define the roles. A data scientist is typically someone with a math and probability background, who also knows how to program. Data scientists are often familiar with big data technologies, in order to run algorithms at scale. A data science team is multidisciplinary, just like a data engineering team. The team has the variety of skills needed to prevent any gaps. It’s unusual to have a single person with all of these skills, and you’ll usually need several different people.&lt;/p&gt;

&lt;p&gt;The role of data engineer typically requires a strong background in programming and distributed systems, whereas the role of a data scientist typically requires a stronger background in math, analysis, and probabilities; of course, there is some crossover, but the two teams are more complementary than heavily overlapping.&lt;/p&gt;

&lt;h2 id=&#34;where-data-science-and-data-engineering-meet:be8878b9aea0d8ff31bd44efb170191f&#34;&gt;Where data science and data engineering meet&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://d3ansictanv2wj.cloudfront.net/image01-1ce0c458317c9db05febf41792a73973.jpg&#34;&gt;&lt;/p&gt;

&lt;p&gt;In the image above, I show how tasks are distributed between data science and data engineering teams. I could, and have, talked about this diagram for an hour. The duties are shown as more of a data science or data engineering duty by how close they are to the top or bottom of the center panel. Notice that very few duties are solely a data science or data engineering duty.&lt;/p&gt;

&lt;p&gt;There are a few points I want you to take away from this diagram. A data engineering team isn’t just there to write the code—they need to be able to analyze data, too.&lt;/p&gt;

&lt;p&gt;Likewise, data scientists aren’t just there to just make equations and throw them over the fence to the data engineering team—data scientists need to have some level of programming. If the throw-it-over-the-fence scenario becomes the perception or reality, there can be a great deal of animosity between the teams. In Figure 3, I show how there should be a high bandwidth and significant level of interaction between the two teams.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://d3ansictanv2wj.cloudfront.net/image02-94a3d7311cd4cfe3d85bd7f204066259.jpg&#34; align=&#34;right&#34;&gt;&lt;/p&gt;

&lt;h3 id=&#34;how-to-work-with-a-data-warehousing-team:be8878b9aea0d8ff31bd44efb170191f&#34;&gt;How to work with a data warehousing team&lt;/h3&gt;

&lt;p&gt;In contrast to the data science team, there is a great deal of overlap with a data warehousing team. Often, the entire reason for creating a data engineering team and moving to big data solutions is to move off of data warehousing products.&lt;/p&gt;

&lt;p&gt;Big data technologies can do everything that a data warehousing product can do and much more; however, the skillsets are very different. While a data warehousing team focuses on SQL and doesn’t program, a data engineering team focuses on SQL, programming, and other necessary skills.&lt;/p&gt;

&lt;p&gt;The data warehousing team is almost always separate from a data engineering team, yet some companies will rename their data warehousing team as a data engineering team, despite the required skillsets being very different and the levels of complexity between the two teams much greater. Elements from a data warehousing team can sometimes fill in skill gaps in a data engineering team, however—usually domain knowledge and skills in analysis. If you do decide to merge or rename your data warehousing team as a data engineering team, you will need to check for capability gaps. This is a common reason why data warehousing teams have low success rates with big data projects.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.oreilly.com/ideas/what-is-a-productive-data-engineering-team&#34; class=&#34;btn&#34; target=&#34;_blank&#34;&gt;View original article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;*Source: &lt;a href=&#34;https://www.oreilly.com&#34; target=_&gt;O’Reilly&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The 2017 Big Data Landscape</title>
      <link>https://andrewrgoss.com/2017/the-2017-big-data-landscape/</link>
      <pubDate>Wed, 05 Apr 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/2017/the-2017-big-data-landscape/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/post/big_data_landscape_2017.png&#34; alt=&#34;2017 Big Data Landscape&#34; title=&#34;2017 Big Data Landscape&#34; /&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Just released - an excellent &amp;ldquo;State of the Union&amp;rdquo; roundup of the key trends in the 2017 data ecosystem. Some high level trends and questions that are explored in this comprehensive article:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Big data + AI = the new stack. &lt;b&gt;Big data provides the pipes, and AI provides the smarts.&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;Enterprise budgets - follow the money&lt;/li&gt;
&lt;li&gt;Enterprise data moving to the cloud&lt;/li&gt;
&lt;li&gt;As the big data landscape gets busier every passing year, is big data consolidation coming?&lt;/li&gt;
&lt;li&gt;The cloud wars&lt;/li&gt;
&lt;li&gt;The rise of the data team workbench. &lt;b&gt;Success in big data is based on creating an assembly line of technologies, people and processes.&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;AI-powered vertical applications&lt;/li&gt;
&lt;li&gt;Bots backlash&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the killer combination of big data and AI (hype aside), the possibilities are enormous. As core infrastructure continues to mature, and the application side, powered by AI, is bursting with activity, in 2017 the big data (and AI) ecosystem is firing on all cylinders.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mattturck.com/bigdata2017&#34; class=&#34;btn&#34; target=&#34;_blank&#34;&gt;View the full report&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;sub&gt;*Source: &lt;a href=&#34;http://mattturck.com&#34; target=_&gt;Matt Turck&lt;/a&gt;&lt;/sub&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting Started With NSQ for Go</title>
      <link>https://andrewrgoss.com/2017/getting-started-with-nsq-for-go/</link>
      <pubDate>Thu, 23 Mar 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/2017/getting-started-with-nsq-for-go/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://nsq.io&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://andrewrgoss.com/img/post/nsq.png&#34; alt=&#34;NSQ&#34; title=&#34;NSQ&#34; /&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been recently working on software application project at &lt;a href=&#34;https://www.digitaslbi.com/en-us&#34; target=&#34;_blank&#34;&gt;DigitasLBi&lt;/a&gt; where we adopted &lt;a href=&#34;http://nsq.io&#34; target=&#34;_blank&#34;&gt;NSQ&lt;/a&gt; as part of our microservices architecture. With this post I&amp;rsquo;d like to share how you can get started with NSQ by sending and receiving a simple message by writing some &lt;a href=&#34;https://golang.org&#34; target=&#34;_blank&#34;&gt;Go&lt;/a&gt; code.&lt;/p&gt;

&lt;h2 id=&#34;what-is-nsq:dda9787168a23dcd34b7e3f1e03bb799&#34;&gt;What is NSQ?&lt;/h2&gt;

&lt;p&gt;Per the official website, NSQ is a realtime distributed messaging platform designed to operate at scale, handling billions of messages per day.&lt;/p&gt;

&lt;p&gt;It promotes distributed and decentralized topologies without single points of failure, enabling fault tolerance and high availability coupled with a reliable message delivery guarantee.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://f.cloud.github.com/assets/187441/1700696/f1434dc8-6029-11e3-8a66-18ca4ea10aca.gif&#34;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;nsqd&lt;/code&gt; is the daemon that receives, queues, and delivers messages to clients.&lt;/p&gt;

&lt;p&gt;With the chart above you can understand the basic premise of NSQ involves producers and consumers - within your code you create NSQ producers to push messages to NSQ that get queued up to be consumed by other programs within your application.&lt;/p&gt;

&lt;h2 id=&#34;installing-nsq-on-linux-vm:dda9787168a23dcd34b7e3f1e03bb799&#34;&gt;Installing NSQ (on Linux VM)&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ wget https://s3.amazonaws.com/bitly-downloads/nsq/nsq-1.0.0-compat.linux-amd64.go1.8.tar.gz
$ tar nsq-1.0.0-compat.linux-amd64.go1.8.tar.gz
$ sudo mv nsq-1.0.0-compat.linux-amd64.go1.8.tar.gz/bin/* /usr/local/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;launching-nsqd:dda9787168a23dcd34b7e3f1e03bb799&#34;&gt;Launching NSQD&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ nsqlookupd &amp;amp; 
$ nsqd --lookupd-tcp-address=127.0.0.1:4160 &amp;amp;
$ nsqadmin --lookupd-http-address=127.0.0.1:4161 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If done successfully you will be able to view a web UI that looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://nsq.io/static/img/nsqadmin_screenshot.png&#34;&gt;&lt;/img&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;nsqadmin&lt;/code&gt; is a Web UI to view aggregated cluster stats in realtime and perform various administrative tasks.&lt;/p&gt;

&lt;h2 id=&#34;writing-your-go-program:dda9787168a23dcd34b7e3f1e03bb799&#34;&gt;Writing Your Go Program&lt;/h2&gt;

&lt;p&gt;To import the NSQ client library, use a &lt;code&gt;go get&lt;/code&gt; command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go get github.com/nsqio/go-nsq
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;creating-a-consumer:dda9787168a23dcd34b7e3f1e03bb799&#34;&gt;Creating a Consumer&lt;/h3&gt;

&lt;p&gt;I like creating the consumer first so I can see the handler in action after pushing a message with a producer (see next &lt;a href=&#34;#producer&#34;&gt;section&lt;/a&gt;).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import (
    &amp;quot;log&amp;quot;
    &amp;quot;sync&amp;quot;

    &amp;quot;github.com/nsqio/go-nsq&amp;quot;
)

func main() {
    wg := &amp;amp;sync.WaitGroup{}
    wg.Add(1)

    decodeConfig := nsq.NewConfig()
    c, err := nsq.NewConsumer(&amp;quot;My_NSQ_Topic&amp;quot;, &amp;quot;My_NSQ_Channel&amp;quot;, decodeConfig)
    if err != nil {
        log.Panic(&amp;quot;Could not create consumer&amp;quot;)
    }
    //c.MaxInFlight defaults to 1

    c.AddHandler(nsq.HandlerFunc(func(message *nsq.Message) error {
        log.Println(&amp;quot;NSQ message received:&amp;quot;)
        log.Println(string(message.Body))
        return nil
    }))

    err = c.ConnectToNSQD(&amp;quot;127.0.0.1:4150&amp;quot;)
    if err != nil {
        log.Panic(&amp;quot;Could not connect&amp;quot;)
    }
    log.Println(&amp;quot;Awaiting messages from NSQ topic \&amp;quot;My NSQ Topic\&amp;quot;...&amp;quot;)
    wg.Wait()
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now run this consumer program:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go run consume.go
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You&amp;rsquo;ll get this output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;2017/04/05 17:33:42 INF    1 [My_NSQ_Topic/My_NSQ_Channel] (127.0.0.1:4150) connecting to nsqd
2017/04/05 17:33:42 Awaiting messages from NSQ topic &amp;quot;My NSQ Topic&amp;quot;...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This should hang there waiting to receive a NSQ message from a topic you specify. Nothing will happen just yet since there aren&amp;rsquo;t any queued up messages for this particular topic. Leave this program running in a terminal window for now. In the next step we&amp;rsquo;ll push a message to it.&lt;/p&gt;

&lt;h3 id=&#34;a-name-producer-a-creating-a-producer:dda9787168a23dcd34b7e3f1e03bb799&#34;&gt;&lt;a name=&#34;producer&#34;&gt;&lt;/a&gt;Creating a Producer&lt;/h3&gt;

&lt;p&gt;You can publish a message with a producer with some simple code like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main

import (
  &amp;quot;log&amp;quot;

  &amp;quot;github.com/nsqio/go-nsq&amp;quot;
)

func main() {
    config := nsq.NewConfig()
    p, err := nsq.NewProducer(&amp;quot;127.0.0.1:4150&amp;quot;, config)
    if err != nil {
        log.Panic(err)
    }
    err = p.Publish(&amp;quot;My_NSQ_Topic&amp;quot;, []byte(&amp;quot;sample NSQ message&amp;quot;))
    if err != nil {
        log.Panic(err)
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now run this publisher program:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go run publish.go
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this terminal window, you&amp;rsquo;ll only see this message indicating your message was published to NSQ:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go run publish.go
2017/04/05 17:39:15 INF    1 (127.0.0.1:4150) connecting to nsqd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you look at your consumer terminal window that you left running from the previous step, you&amp;rsquo;ll now see this additional output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;2017/04/05 17:33:42 Awaiting messages from NSQ topic &amp;quot;My NSQ Topic&amp;quot;...
2017/04/05 17:39:15 NSQ message received:
2017/04/05 17:39:15 sample NSQ message
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Congrats - you just pushed and received your first NSQ message!&lt;/p&gt;

&lt;p&gt;If you go back to your web UI console you&amp;rsquo;ll see your newly-created topic. If you drill into this topic, you can also see the channel that you consumed the message to, with the message counter at 1:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://andrewrgoss.com/img/post/nsq_topic.png&#34; alt=&#34;NSQ Topic&#34; title=&#34;NSQ Topic&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
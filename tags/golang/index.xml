<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Andrew Goss · Senior Data Engineer in Boston</title>
    <link>https://andrewrgoss.com/tags/golang/</link>
    <description>Recent content in Golang on Andrew Goss · Senior Data Engineer in Boston</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>andrewrgoss@gmail.com (Andrew Goss)</managingEditor>
    <webMaster>andrewrgoss@gmail.com (Andrew Goss)</webMaster>
    <lastBuildDate>Thu, 01 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://andrewrgoss.com/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What&#39;s the Go Language Really Good For?</title>
      <link>https://andrewrgoss.com/2017/whats-the-go-language-really-good-for/</link>
      <pubDate>Thu, 01 Jun 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/2017/whats-the-go-language-really-good-for/</guid>
      <description>written by Serdar Yegulalp
 InfoWorld examines the strengths, weaknesses, use cases, and future directions of Google&amp;rsquo;s hit programming language
 During its eight-plus years in the wild, Google’s Go language—with version 1.8.1 out as of April 2017—has evolved from being a curiosity for alpha geeks to being the battle-tested programming language behind some of the world’s most important cloud-centric projects.
Why was Go chosen by the developers of such projects as Docker and Kubernetes?</description>
    </item>
    
    <item>
      <title>Getting Started With NSQ for Go</title>
      <link>https://andrewrgoss.com/2017/getting-started-with-nsq-for-go/</link>
      <pubDate>Thu, 23 Mar 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/2017/getting-started-with-nsq-for-go/</guid>
      <description>I&amp;rsquo;ve been recently working on software application project at DigitasLBi where we adopted NSQ as part of our microservices architecture. With this post I&amp;rsquo;d like to share how you can get started with NSQ by sending and receiving a simple message by writing some Go code.
What is NSQ? Per the official website, NSQ is a realtime distributed messaging platform designed to operate at scale, handling billions of messages per day.</description>
    </item>
    
    <item>
      <title>Caleb Doxsey- An Introduction to Programming in Go</title>
      <link>https://andrewrgoss.com/2016/caleb-doxsey--an-introduction-to-programming-in-go/</link>
      <pubDate>Wed, 27 Jan 2016 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/2016/caleb-doxsey--an-introduction-to-programming-in-go/</guid>
      <description>BOOK LINK  Go (Golang) is an open source programming language that makes it easy to build simple, reliable, and efficient software. I first started using Go through my work at DigitasLBi. My department adopted this language as one of our tech stacks for the following reasons:
 It’s open source (i.e. free) and intended to be simple yet expressive. It’s intended to be a good middleware layer to provide for both quick one-off applications as well as large collaborative code bases.</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Andrew Goss · Senior Data Engineer in Boston</title>
    <link>https://andrewrgoss.com/projects/</link>
    <description>Recent content in Projects on Andrew Goss · Senior Data Engineer in Boston</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>andrewrgoss@gmail.com (Andrew Goss)</managingEditor>
    <webMaster>andrewrgoss@gmail.com (Andrew Goss)</webMaster>
    <lastBuildDate>Fri, 29 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://andrewrgoss.com/projects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Budget App</title>
      <link>https://andrewrgoss.com/projects/budget_app/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/projects/budget_app/</guid>
      <description>Udemy- Complete JavaScript Course &amp;gt;&amp;gt; My projects
Planning Guide
View project 
This project put all kinds of different JavaScript concepts from the Complete JavaScript Course I completed into practice.
View my project
View my code on GitHub</description>
    </item>
    
    <item>
      <title>DOM Pig Game</title>
      <link>https://andrewrgoss.com/projects/dom_pig_game/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/projects/dom_pig_game/</guid>
      <description>Udemy- Complete JavaScript Course &amp;gt;&amp;gt; My projects

Part of the Complete JavaScript Course I completed, this project put JavaScript concepts from the section on DOM manipulation and events into practice.
GAME RULES:  The game has 2 players, playing in rounds In each turn, a player rolls a dice as many times as he/she wishes. Each result get added to his ROUND score BUT, if the player rolls a 1, all his/her ROUND score gets lost.</description>
    </item>
    
    <item>
      <title>Gologger</title>
      <link>https://andrewrgoss.com/projects/gologger/</link>
      <pubDate>Tue, 19 Jan 2016 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/projects/gologger/</guid>
      <description>Projects &amp;gt;&amp;gt; Gologger
 Gologger incorporates the elements of the best user-designed logging tools for Go. It primarily makes use of CoLog, a prefix-based execution logging tool.
The goal of this tool is to provide a simple, easy-to-use, customizable framework for implementing leveled, environment-based logging for new Go applications.
Usage This tool is setup to customize logging outputs based on the environment command line flag. It uses CoLog to read and parse the standard log output, effectively acting as an extension of the default log library.</description>
    </item>
    
    <item>
      <title>Scratch - Wind Power</title>
      <link>https://andrewrgoss.com/projects/scratch/</link>
      <pubDate>Tue, 18 Feb 2014 00:00:00 +0000</pubDate>
      <author>andrewrgoss@gmail.com (Andrew Goss)</author>
      <guid>https://andrewrgoss.com/projects/scratch/</guid>
      <description>Projects &amp;gt;&amp;gt; Scratch - Wind Power
 As part of the popular Harvard University course CS50x that I took through EdX, I built a small Scratch application in completing the first problem set.
 Scratch is a &amp;lsquo;language&amp;rsquo; wherein you create programs by dragging together and connecting “blocks”. Unlike other programming languages, Scratch is very visual, making it a good first project for building fundamentals and learning to think like a programmer.</description>
    </item>
    
  </channel>
</rss>